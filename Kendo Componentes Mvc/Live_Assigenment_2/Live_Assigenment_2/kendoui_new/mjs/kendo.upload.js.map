{"version":3,"file":"kendo.upload.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","antiForgeryTokens","logToConsole","rFileExtension","NS","SELECT","UPLOAD","SUCCESS","ERROR","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","INVALIDMAXFILESIZE","INVALIDMINFILESIZE","INVALIDFILEEXTENSION","HOVER_STATE","FOCUS_STATE","PROGRESSBAR_SELECTOR","TABINDEX","headerStatusIconName","Upload","extend","init","element","options","that","this","progressbars","fn","call","multiple","directory","localization","activeInput","wrapper","closest","length","_wrapInput","_activeInput","toggle","enabled","ns","_ns","guid","on","_onParentFormSubmit","bind","_onParentFormReset","_initUploadModule","_toggleDropZone","_onFileAction","_onClearSelected","_onUploadSelected","_onKeyDown","_focusout","val","_onInputChange","target","events","showFileList","template","files","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","allowedExtensions","maxFileSize","minFileSize","dropZone","saveUrl","_module","_supportsFormData","formDataUploadModule","iframeUploadModule","_async","initialFiles","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","trigger","destroy","customDropZone","document","add","forEach","progressbar","fileEntry","onPause","pauseIcon","find","icon","parent","onResume","playIcon","upload","onSaveSelected","getFiles","filesData","allFiles","listItems","i","data","j","push","clearAllFiles","each","index","file","_removeFileByDomElement","removeAllFiles","removeFileByUid","uid","_removeFileByUid","clearFileByUid","shouldSendRemoveRequest","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","input","clone","insertAfter","prefix","hide","removeAttr","e","preventDefault","addClass","removeClass","_adjustFocusState","focusedItem","toFocus","_arrowKeyNavigation","key","kendoKeys","keys","DOWN","stopPropagation","first","next","UP","prev","RIGHT","LEFT","_preventFocusRemove","_asyncCommandKeyNavigation","eventArgs","_retryClicked","ESC","_checkAllComplete","SPACEBAR","ENTER","is","chunkSize","concurrent","finish","show","metaData","prepareChunk","onRetry","_commandKeyNavigation","hasValidationErrors","_filesContainValidationErrors","headers","DELETE","TAB","commandKeys","keyCode","indexOf","assignGuidToFiles","_inputFiles","_isAsyncNonBatch","validateFiles","onSelect","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","stopEvent","directoryDrop","webkitGetAsEntry","entry","getAllFileInfo","splice","hasErrors","batch","idx","currentFile","_enqueueFile","fileNames","_supportsRemove","_fileAction","_prepareTemplateData","templateData","totalSize","size","_createProgressbarWapper","_createFileIconWrapper","fileTypeIcon","iconClass","_progressbarInit","kendoProgressBar","animation","showStatus","_prepareDefaultSingleFileEntryTemplate","fileSize","getTotalFilesSizeMessage","fileGroup","getFileGroup","extension","errors","isError","invalidClass","fileDetails","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","isProgressbar","fileUid","fileList","progressbarSelector","appendTo","angular","elements","value","_removeFileEntry","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","iconsNameDictionary","hasOwnProperty","_clearFileAction","firstActionIcon","append","_renderAction","_fileState","stateKey","currentState","uploading","text","uploaded","failed","iconName","actionText","empty","button","_onFileProgress","percentComplete","progressBar","prepend","getFileEntry","_onUploadSuccess","response","xhr","fileInfo","operation","XMLHttpRequest","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","responseText","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","totalChunks","Math","round","delay","fadeOut","_showActionButtons","actionsWrapper","uploadButton","clearButton","html","renderButton","themeColor","_showHeaderUploadStatus","isUploading","headerUploadStatus","headerUploadStatusIcon","currentlyUploading","not","currentlyFailed","currentlyPaused","onAbort","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","toLowerCase","test","navigator","_setupDropZone","dropEffect","bindDragEventWrappers","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","_submitRemove","onSuccess","onError","removeField","params","jQuery","ajax","type","dataType","dataFilter","normalizeJSON","url","traditional","success","error","xhrFields","hasLabel","wrap","prependTo","inputFiles","prototype","filesContainErrors","relatedInput","getFileName","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","fileValidation","cleanupFrame","unregisterFrame","body","dataInput","one","onIframeLoad","submit","started","isFileUploadStarted","contents","ex","processResponse","fakeXHR","tryParseJSON","jsonResult","statusText","status","stopFrameSubmit","removeUploadedFile","action","stop","execCommand","grep","position","cancelled","paused","map","join","$input","slashIndex","lastIndexOf","substr","getFileExtension","rawFiles","fileName","rawFile","htmlEncode","matches","match","unique","validationInfo","extensions","ext","substring","validateFileExtension","validateFileSize","validationErrors","inArray","toFixed","shouldRemoveFileEntry","textStatus","json","JSON","parse","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","Date","setInterval","clearInterval","sourceElement","fileEntries","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","FormData","chunk","serializedMetaData","stringify","raiseError","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","chunkIndex","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin"],"sources":["kendo.upload.js"],"mappings":"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","sourcesContent":["import './kendo.core.js';\nimport './kendo.progressbar.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"upload\",\n    name: \"Upload\",\n    category: \"web\",\n    description: \"The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.\",\n    depends: [\"core\", \"progressbar\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        antiForgeryTokens = kendo.antiForgeryTokens,\n        logToConsole = kendo.logToConsole,\n        rFileExtension = /\\.([^\\.]+)$/,\n        NS = \".kendoUpload\",\n        SELECT = \"select\",\n        UPLOAD = \"upload\",\n        SUCCESS = \"success\",\n        ERROR = \"error\",\n        COMPLETE = \"complete\",\n        CANCEL = \"cancel\",\n        CLEAR = \"clear\",\n        PAUSE = \"pause\",\n        RESUME = \"resume\",\n        PROGRESS = \"progress\",\n        REMOVE = \"remove\",\n        VALIDATIONERRORS = \"validationErrors\",\n        INVALIDMAXFILESIZE = \"invalidMaxFileSize\",\n        INVALIDMINFILESIZE = \"invalidMinFileSize\",\n        INVALIDFILEEXTENSION = \"invalidFileExtension\",\n        PROGRESSHIDEDELAY = 1000,\n        PROGRESSHIDEDURATION = 2000,\n        HOVER_STATE = \"k-hover\",\n        FOCUS_STATE = \"k-focus\",\n        PROGRESSBAR_CLASS = \"k-progressbar\",\n        PROGRESSBAR_SELECTOR = \".\" + PROGRESSBAR_CLASS,\n        PROGRESSBAR_TEMPLATE_SELECTOR = \".k-progress\",\n        TABINDEX = \"tabindex\",\n        WARNINGICON_SELECTOR = `.k-i-exclamation-circle,.k-svg-i-exclamation-circle`;\n\n    var headerStatusIconName = {\n        loading: \"upload\",\n        warning: \"exclamation-circle\",\n        success: \"check\"\n    };\n\n    var Upload = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            that.progressbars = [];\n\n            Widget.fn.init.call(that, element, options);\n\n            that.name = element.name;\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n            that.localization = that.options.localization;\n\n            var activeInput = that.element;\n            that.wrapper = activeInput.closest(\".k-upload\");\n            if (that.wrapper.length === 0) {\n                that.wrapper = that._wrapInput(activeInput);\n            }\n\n            that._activeInput(activeInput);\n            that.toggle(that.options.enabled);\n\n            var ns = that._ns = NS + \"-\" + kendo.guid();\n            activeInput.closest(\"form\")\n                .on(\"submit\" + ns, that._onParentFormSubmit.bind(that))\n                .on(\"reset\" + ns, that._onParentFormReset.bind(that));\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n\n            that.wrapper\n                .on(\"click\", \".k-upload-action\", that._onFileAction.bind(that))\n                .on(\"click\", \".k-clear-selected\", that._onClearSelected.bind(that))\n                .on(\"click\", \".k-upload-selected\", that._onUploadSelected.bind(that))\n                .on(\"keydown\", that._onKeyDown.bind(that))\n                .on(\"focusout\", that._focusout.bind(that));\n\n            if (that.element.val()) {\n                that._onInputChange({ target: that.element });\n            }\n        },\n\n        events: [\n            SELECT,\n            UPLOAD,\n            SUCCESS,\n            ERROR,\n            COMPLETE,\n            CANCEL,\n            CLEAR,\n            PROGRESS,\n            REMOVE,\n            PAUSE,\n            RESUME\n        ],\n\n        options: {\n            name: \"Upload\",\n            enabled: true,\n            multiple: true,\n            directory: false,\n            showFileList: true,\n            template: \"\",\n            files: [],\n            async: {\n                autoRetryAfter: 0,\n                bufferChunkSize: 10000000,\n                maxAutoRetries: 1,\n                removeVerb: \"POST\",\n                autoUpload: true,\n                withCredentials: true,\n                accept: \"*/*; q=0.5, application/json\",\n                useArrayBuffer: false\n            },\n            localization: {\n                \"select\": \"Select files...\",\n                \"cancel\": \"Cancel\",\n                \"retry\": \"Retry\",\n                \"remove\": \"Remove\",\n                \"pause\": \"Pause\",\n                \"resume\": \"Resume\",\n                \"clearSelectedFiles\": \"Clear\",\n                \"uploadSelectedFiles\": \"Upload\",\n                \"dropFilesHere\": \"Drop files here to upload\",\n                \"invalidFiles\": \"Invalid file(s). Please check file upload requirements.\",\n                \"statusUploading\": \"uploading\",\n                \"statusUploaded\": \"uploaded\",\n                \"statusWarning\": \"warning\",\n                \"statusFailed\": \"failed\",\n                \"headerStatusUploading\": \"Uploading...\",\n                \"headerStatusPaused\": \"Paused\",\n                \"headerStatusUploaded\": \"Done\",\n                \"uploadSuccess\": \"File(s) uploaded successfully.\",\n                \"uploadFail\": \"File(s) failed to upload.\",\n                \"invalidMaxFileSize\": \"File size too large.\",\n                \"invalidMinFileSize\": \"File size too small.\",\n                \"invalidFileExtension\": \"File type not allowed.\"\n            },\n            validation: {\n                allowedExtensions: [],\n                maxFileSize: 0,\n                minFileSize: 0\n            },\n            dropZone: \"\"\n        },\n\n        _initUploadModule: function() {\n            var that = this,\n                options = that.options;\n\n            if (options.async.saveUrl) {\n                that._module = that._supportsFormData() ?\n                new formDataUploadModule(that) :\n                new iframeUploadModule(that);\n                that._async = true;\n\n                var initialFiles = options.files;\n                if (initialFiles.length > 0) {\n                    that._renderInitialFiles(initialFiles);\n                }\n\n            } else {\n                that._module = new syncUploadModule(that);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                activeInput = that.element;\n\n            $(that.options.dropZone).off(that._ns);\n\n            Widget.fn.setOptions.call(that, options);\n\n            that.multiple = that.options.multiple;\n            that.directory = that.options.directory;\n\n            activeInput.attr(\"multiple\", that._supportsMultiple() ? that.multiple : false);\n            if (that.directory) {\n                activeInput.attr(\"webkitdirectory\", that.directory);\n                activeInput.attr(\"directory\", that.directory);\n            }\n            that.toggle(that.options.enabled);\n\n            that._initUploadModule();\n\n            that._toggleDropZone();\n        },\n\n        enable: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? true : enable;\n            this.toggle(enable);\n        },\n\n        disable: function() {\n            this.toggle(false);\n        },\n\n        toggle: function(enable) {\n            enable = typeof (enable) === \"undefined\" ? enable : !enable;\n            this.wrapper.toggleClass(\"k-disabled\", enable);\n            this.element.prop(\"disabled\", enable);\n        },\n\n        focus: function() {\n            this.element.trigger(\"focus\");\n        },\n\n        destroy: function() {\n            var that = this;\n            var customDropZone = $(that.options.dropZone);\n\n            $(document)\n                .add($(\".k-dropzone\", that.wrapper))\n                .add(that.wrapper.closest(\"form\"))\n                .off(that._ns);\n\n            if (customDropZone.length > 0) {\n                customDropZone.off(that._ns);\n            }\n\n            $(that.element).off(NS);\n\n            if (that.progressbars) {\n                that.progressbars.forEach(progressbar => {\n                    progressbar.destroy();\n                });\n            }\n            Widget.fn.destroy.call(that);\n        },\n        pause: function(fileEntry) {\n            this._module.onPause({ target: $(fileEntry, this.wrapper) });\n\n            var pauseIcon = fileEntry.find(\".k-i-pause-sm,.k-svg-i-pause-sm\");\n            kendo.ui.icon(pauseIcon, { icon: \"play-sm\" });\n            pauseIcon.attr(\"title\", this.localization.resume);\n            $(pauseIcon).parent().attr(\"aria-label\", this.localization.resume);\n        },\n        resume: function(fileEntry) {\n            this._module.onResume({ target: $(fileEntry, this.wrapper) });\n\n            var playIcon = fileEntry.find(\".k-i-play-sm,.k-svg-i-play-sm\");\n            kendo.ui.icon(playIcon, { icon: \"pause-sm\" });\n            playIcon.attr(\"title\", this.localization.pause);\n            $(playIcon).parent().attr(\"aria-label\", this.localization.pause);\n        },\n        upload: function() {\n            var that = this;\n\n            that._module.onSaveSelected();\n        },\n\n        getFiles: function() {\n            var that = this;\n            var filesData;\n            var allFiles = [];\n            var listItems = that.wrapper.find(\".k-file\");\n\n            for (var i = 0; i < listItems.length; i++) {\n                filesData = $(listItems[i]).data(\"fileNames\");\n\n                if (filesData) {\n                    for (var j = 0; j < filesData.length; j++) {\n                        allFiles.push(filesData[j]);\n                    }\n                }\n            }\n\n            return allFiles;\n        },\n\n        clearAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, false);\n            });\n        },\n\n        removeAllFiles: function() {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n\n            files.each(function(index, file) {\n                that._removeFileByDomElement(file, true);\n            });\n        },\n\n        removeFileByUid: function(uid) {\n            this._removeFileByUid(uid, true);\n        },\n\n        clearFileByUid: function(uid) {\n            this._removeFileByUid(uid, false);\n        },\n\n        _removeFileByUid: function(uid, shouldSendRemoveRequest) {\n            var that = this;\n            var fileEntry;\n\n            if (typeof uid !== 'string') { return; }\n\n            fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n\n            if (fileEntry.length > 0) {\n                that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n            }\n        },\n\n        clearFile: function(callback) {\n            this._removeFile(callback, false);\n        },\n\n        removeFile: function(callback) {\n            this._removeFile(callback, true);\n        },\n\n        _removeFile: function(callback, shouldSendRemoveRequest) {\n            var that = this;\n            var files = that.wrapper.find(\".k-file\");\n            var fileData;\n\n            if (typeof callback === \"function\") {\n                files.each(function(index, file) {\n                    fileData = $(file).data(\"fileNames\");\n\n                    if (callback(fileData)) {\n                        that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                    }\n                });\n            }\n        },\n\n        _removeFileByDomElement: function(fileEntry, shouldSendRemoveRequest) {\n            var that = this;\n            var fileData = {\n                target: $(fileEntry, that.wrapper)\n            };\n            var allFiles;\n\n            if (that.options.async.saveUrl) {\n                if ($(fileEntry).hasClass(\"k-file-progress\")) {\n                    that._module.onCancel(fileData);\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n\n                allFiles = $(\".k-file\", that.wrapper);\n\n                if (allFiles.length === 0) {\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            } else {\n                that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n            }\n        },\n\n        _addInput: function(sourceInput) {\n            //check if source input is a DOM element. Required for some unit tests\n            if (!sourceInput[0].nodeType) {\n                return;\n            }\n\n            var that = this,\n                input = sourceInput.clone().val(\"\");\n\n            input\n                .insertAfter(that.element)\n                .data(\"kendo\" + that.options.prefix + that.options.name, that);\n\n            $(that.element)\n                .hide()\n                .attr(TABINDEX, \"-1\")\n                .removeAttr(\"id\")\n                .off(NS);\n\n            that._activeInput(input);\n            that.element.trigger(\"focus\");\n        },\n\n        _activeInput: function(input) {\n            var that = this,\n                wrapper = that.wrapper;\n\n            that.element = input;\n\n            if (that.directory) {\n                input.attr(\"webkitdirectory\", that.directory);\n                input.attr(\"directory\", that.directory);\n            }\n\n            input\n                .attr(\"multiple\", that._supportsMultiple() ? that.multiple : false)\n                .attr(\"autocomplete\", \"off\")\n                .on(\"click\" + NS, function(e) {\n                    if (wrapper.hasClass(\"k-disabled\")) {\n                        e.preventDefault();\n                    }\n                })\n                .on(\"focus\" + NS, function() {\n                    $(this).parent().addClass(FOCUS_STATE);\n                })\n                .on(\"blur\" + NS, function() {\n                    $(this).parent().removeClass(FOCUS_STATE);\n                })\n                .on(\"change\" + NS, that._onInputChange.bind(that));\n        },\n\n        _adjustFocusState: function(focusedItem, toFocus) {\n            focusedItem.removeClass(FOCUS_STATE);\n            focusedItem.attr(TABINDEX, -1);\n            toFocus.addClass(FOCUS_STATE);\n            toFocus.attr(TABINDEX, 0);\n        },\n\n        _arrowKeyNavigation: function(e, key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                toFocus;\n\n            if (key === kendoKeys.DOWN) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file\").first();\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.next();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n\n                if (!toFocus || toFocus.length === 0) {\n                    toFocus = that.wrapper.find(\".k-clear-selected\");\n                }\n            } else if (key === kendoKeys.UP) {\n                e.preventDefault();\n                e.stopPropagation();\n\n                toFocus = that.wrapper.find(\".k-upload-files .k-file:last\");\n\n                if (focusedItem.length > 0) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        focusedItem = focusedItem.closest(\".k-file\");\n                    }\n\n                    toFocus = focusedItem.prev();\n                }\n\n                that._adjustFocusState(focusedItem, toFocus);\n            } else if (key === kendoKeys.RIGHT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.next(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:first\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:first\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            } else if (key === kendoKeys.LEFT) {\n                if (focusedItem.hasClass(\"k-upload-action\")) {\n                    toFocus = focusedItem.prev(\".k-upload-action\");\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = focusedItem.parent().find(\".k-upload-action:last\");\n                    }\n                } else if (focusedItem.length > 0) {\n                    toFocus = focusedItem.find(\".k-upload-action:last\");\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    toFocus.addClass(FOCUS_STATE);\n                }\n            }\n\n            if ((!toFocus || toFocus.length === 0) && (key === kendoKeys.UP || key === kendoKeys.DOWN)) {\n                toFocus = that.element;\n            }\n\n            if (toFocus && toFocus.length > 0) {\n                that._preventFocusRemove = true;\n                toFocus.trigger(\"focus\");\n            }\n        },\n\n        _asyncCommandKeyNavigation: function(key, focusedItem, eventArgs) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                fileEntry = $(focusedItem, that.wrapper);\n\n            that._retryClicked = false;\n\n            if (key === kendoKeys.ESC && focusedItem.find(\".k-i-cancel,.k-svg-i-cancel\").length > 0) {\n                that.trigger(CANCEL, eventArgs);\n                that._module.onCancel({ target: fileEntry });\n                that._checkAllComplete();\n                that._updateHeaderUploadStatus();\n                that._preventFocusRemove = true;\n                that.element.trigger(\"focus\");\n            } else if (key === kendoKeys.SPACEBAR) {\n                if (focusedItem.find(\".k-i-pause-sm,.k-svg-i-pause-sm\").length > 0) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(focusedItem);\n                    that._updateHeaderUploadStatus();\n                } else if (focusedItem.find(\".k-i-play-sm,.k-svg-i-play-sm\").length > 0) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(focusedItem);\n                }\n            } else if (key === kendoKeys.ENTER && !focusedItem.is(\".k-file-progress, .k-file-success, .k-file-invalid\")) {\n                if (that.options.async.chunkSize && !that.options.async.concurrent && $('.k-file-progress', that.wrapper).length > 0) {\n                    return;\n                }\n\n                $(WARNINGICON_SELECTOR, focusedItem).remove();\n                $(PROGRESSBAR_SELECTOR, focusedItem).finish().show();\n\n                if (!that._module.metaData[fileEntry.data(\"uid\")]) {\n                    that._module.prepareChunk(fileEntry);\n                }\n\n                that._module.onRetry({ target: fileEntry });\n                that._retryClicked = true;\n            }\n        },\n\n        _commandKeyNavigation: function(key, focusedItem) {\n            var that = this,\n                kendoKeys = kendo.keys,\n                files = focusedItem.data(\"fileNames\"),\n                hasValidationErrors = that._filesContainValidationErrors(files),\n                eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n            if (key === kendoKeys.DELETE) {\n                if (!that.trigger(REMOVE, eventArgs)) {\n                    that._module.onRemove({ target: $(focusedItem, that.wrapper) }, eventArgs, !hasValidationErrors);\n                    that._preventFocusRemove = true;\n                    that.element.trigger(\"focus\");\n                }\n            } else if (key === kendoKeys.TAB) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else if (!!that.options.async.saveUrl) {\n                that._asyncCommandKeyNavigation(key, focusedItem, eventArgs);\n            }\n        },\n\n        _focusout: function() {\n            var focusedItem = this.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE);\n\n            if (!this._preventFocusRemove) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n            } else {\n                this._preventFocusRemove = false;\n            }\n        },\n\n        _onKeyDown: function(e) {\n            var that = this,\n                focusedItem = that.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE + \",\" + \".k-upload-action.\" + FOCUS_STATE),\n                kendoKeys = kendo.keys,\n                commandKeys = [kendoKeys.DELETE, kendoKeys.ESC, kendoKeys.ENTER, kendoKeys.SPACEBAR, kendoKeys.TAB],\n                key = e.keyCode;\n\n            if (key === kendoKeys.DOWN || key === kendoKeys.UP || key === kendoKeys.LEFT || key === kendoKeys.RIGHT) {\n                that._arrowKeyNavigation(e, key, focusedItem);\n            } else if (focusedItem.length > 0 && focusedItem.hasClass(\"k-file\") && commandKeys.indexOf(key) > -1 && !that.wrapper.hasClass(\"k-disabled\")) {\n                if (key === kendoKeys.SPACEBAR) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n\n                that._commandKeyNavigation(key, focusedItem);\n            }\n        },\n\n        _onInputChange: function(e) {\n            var that = this;\n            var input = $(e.target);\n            var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n\n            validateFiles(files, that.options.validation);\n\n            var prevented = that.trigger(SELECT, { files: files });\n            if (prevented) {\n                that._addInput(input);\n                input.remove();\n            } else {\n                that._module.onSelect({ target: input }, files);\n            }\n        },\n\n        _readDirectory: function(item) {\n            var deferred = new $.Deferred();\n            var dirReader = item.createReader();\n            var allFolderFiles = [];\n\n            var readEntries = function() {\n                dirReader.readEntries(function(entries) {\n                    if (!entries.length) {\n                        deferred.resolve(allFolderFiles);\n                    } else {\n                        allFolderFiles = allFolderFiles.concat(entries);\n                        readEntries();\n                    }\n                }, deferred.reject);\n            };\n\n            readEntries();\n\n             return deferred.promise();\n        },\n\n        _readFile: function(item) {\n            var that = this;\n            var fullpath = item.fullPath;\n\n            item.file(function(file) {\n                    file.relativePath = fullpath.slice(1);\n                    that.droppedFolderFiles.push(file);\n                    that.droppedFolderCounter --;\n                    if (that.droppedFolderCounter === 0) {\n                        setTimeout(function() {\n                            if (that.droppedFolderCounter === 0) {\n                                if (that.droppedFolderFiles.length) {\n                                    that._proceedDroppedItems(that.droppedFolderFiles);\n                                    that.droppedFolderFiles = [];\n                                }\n                            }\n                        },0);\n                    }\n            }, function() {\n                logToConsole(\"File error.\");\n            });\n        },\n\n        _traverseFileTree: function(item, skipCounter) {\n            var that = this;\n            if (!skipCounter) {\n                that.droppedFolderCounter--;\n            }\n\n            this._readDirectory(item).then(function(items) {\n                that.droppedFolderCounter += items.length;\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].isFile) {\n                        that._readFile(items[i]);\n                    } else if (items[i].isDirectory) {\n                        that._traverseFileTree(items[i]);\n                    }\n                }\n            });\n        },\n\n        _onDrop: function(e) {\n            var dt = e.originalEvent.dataTransfer;\n            var that = this;\n            var droppedFiles = dt.files;\n            var length;\n\n            stopEvent(e);\n           if (that.options.directoryDrop && dt.items) {\n                length = dt.items.length;\n                that.droppedFolderCounter = 0;\n                that.droppedFolderFiles = [];\n\n                for (var i = 0; i < length; i++) {\n                    if (dt.items[i].webkitGetAsEntry) {\n                        var entry = dt.items[i].webkitGetAsEntry();\n\n                        if (entry.isDirectory) {\n                            that._traverseFileTree(entry, true);\n                        } else if (entry.isFile) {\n                            that.droppedFolderFiles.push(dt.files[i]);\n                        }\n                    } else {\n                         that._proceedDroppedItems(droppedFiles);\n                    }\n                }\n           } else {\n               that._proceedDroppedItems(droppedFiles);\n           }\n        },\n\n        _proceedDroppedItems: function(droppedFiles) {\n            var that = this;\n            var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n\n              if (droppedFiles.length > 0 && !that.wrapper.hasClass(\"k-disabled\")) {\n                if (!that.multiple && files.length > 1) {\n                    files.splice(1, files.length - 1);\n                }\n\n                validateFiles(files, that.options.validation);\n\n                var prevented = that.trigger(SELECT, { files: files });\n                if (!prevented) {\n                    that._module.onSelect({ target: $(\".k-dropzone\", that.wrapper) }, files);\n                }\n            }\n        },\n\n        _filesContainValidationErrors: function(files) {\n            var hasErrors = false;\n\n            $(files).each(function(index, file) {\n                if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                    hasErrors = true;\n                    return false;\n                }\n            });\n\n            return hasErrors;\n        },\n\n        _isAsyncNonBatch: function() {\n            return (this._async && !this.options.async.batch) || false;\n        },\n\n        _renderInitialFiles: function(files) {\n            var that = this;\n            var idx = 0;\n            files = assignGuidToFiles(files, true);\n\n            for (idx = 0; idx < files.length; idx++) {\n                var currentFile = files[idx];\n\n                var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                fileEntry.addClass(\"k-file-success\").data(\"files\", [files[idx]]);\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                }\n            }\n        },\n\n        _prepareTemplateData: function(name, data) {\n            var filesData = data.fileNames,\n                templateData = {},\n                totalSize = 0,\n                idx = 0;\n\n            for (idx = 0; idx < filesData.length; idx++) {\n                totalSize += filesData[idx].size;\n            }\n\n            templateData.name = name;\n            templateData.size = totalSize;\n            templateData.files = data.fileNames;\n\n            return templateData;\n        },\n\n        _createProgressbarWapper: function() {\n            return \"<div class='\" + PROGRESSBAR_CLASS + \" k-hidden'></div>\";\n        },\n\n        _createFileIconWrapper: function(fileTypeIcon) {\n            return \"<span class='k-file-icon-wrapper'>\" +\n                kendo.ui.icon({ icon: fileTypeIcon, iconClass: \"k-file-icon\" }) +\n                \"<span class='k-file-state'></span>\" +\n                \"</span>\";\n        },\n\n        _progressbarInit: function(wrapper) {\n            let progressbar = wrapper.kendoProgressBar({\n                animation: false,\n                showStatus: false\n            }).data(\"kendoProgressBar\");\n            this.progressbars.push(progressbar);\n        },\n\n        _prepareDefaultSingleFileEntryTemplate: function(data) {\n            var that = this;\n            var file = data.fileNames[0];\n            var fileSize = getTotalFilesSizeMessage(data.fileNames);\n            var fileGroup = kendo.getFileGroup(file.extension, true);\n            var errors = file[VALIDATIONERRORS];\n            var isError = errors && errors.length > 0;\n            var invalidClass = isError ? \" k-file-invalid k-file-error\" : \"\";\n            var fileDetails = isError ?\n                    \"<span class='k-file-validation-message'>\" + that.localization[errors[0]] + \"</span>\" :\n                    \"<span class='k-file-size'>\" + fileSize + \"</span>\";\n            var template = \"\";\n\n            template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                this._createProgressbarWapper() +\n                this._createFileIconWrapper(fileGroup) +\n                \"<span class='k-file-info'>\" +\n                    \"<span class='k-file-name' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                    fileDetails +\n                \"</span>\";\n\n            template += \"<span class='k-upload-actions'></span>\";\n\n            return $(template);\n        },\n\n        _prepareDefaultMultipleFileEntriesTemplate: function(data) {\n            var that = this;\n            var files = data.fileNames;\n            var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n            var totalFileSize = getTotalFilesSizeMessage(files);\n            var template = \"\";\n            var i, currentFile;\n            var invalidClass = filesHaveValidationErrors ? \" k-file-invalid k-file-error\" : \"\";\n\n            template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                this._createProgressbarWapper() +\n                this._createFileIconWrapper(\"files\");\n\n            files.sort(function(a, b) {\n                if (a[VALIDATIONERRORS]) { return -1; }\n\n                if (b[VALIDATIONERRORS]) { return 1; }\n\n                return 0;\n            });\n\n            template += \"<span class='k-multiple-files-wrapper'>\";\n            for (i = 0; i < files.length; i++) {\n                currentFile = files[i];\n                var fileSize = getTotalFilesSizeMessage([currentFile]);\n\n                template += \"<span class='k-file-name-size-wrapper'>\";\n                if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                    template += \"<span class='k-file-name k-file-name-invalid' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                } else {\n                    template += \"<span class='k-file-name' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                }\n                template += \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n            }\n\n            if (filesHaveValidationErrors) {\n                template += \"<span class='k-file-validation-message'>\" + that.localization.invalidFiles + \"</span>\";\n            } else {\n                template += \"<span class='k-file-summary'>Total: \" + files.length + \" files, \" + totalFileSize + \"</span>\";\n            }\n\n            template += \"</span><span class='k-upload-actions'></span>\";\n\n            return $(template);\n        },\n\n        _enqueueFile: function(name, data) {\n            var that = this;\n            var existingFileEntries;\n            var fileEntry;\n            var fileUid = data.fileNames[0].uid;\n            var fileList = $(\".k-upload-files\", that.wrapper);\n            var options = that.options;\n            var template = options.template;\n            var templateData;\n            var removeEventArgs;\n            var progressbarSelector = template ? PROGRESSBAR_TEMPLATE_SELECTOR : PROGRESSBAR_SELECTOR;\n            var progressbar;\n            var isProgressbar;\n\n            if (fileList.length === 0) {\n                fileList = $(\"<ul class='k-upload-files k-reset'></ul>\").appendTo(that.wrapper);\n                if (!that.options.showFileList) {\n                    fileList.hide();\n                }\n\n                that.wrapper.removeClass(\"k-upload-empty\");\n            }\n\n            existingFileEntries = $(\".k-file\", fileList);\n\n            if (!template) {\n                if (data.fileNames.length === 1) {\n                    fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                } else {\n                    fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                }\n            } else {\n                templateData = that._prepareTemplateData(name, data);\n                template = kendo.template(template);\n\n                fileEntry = $(\"<li class='k-file'>\" + template(templateData) + \"</li>\");\n                fileEntry.find(\".k-upload-action\").addClass(\"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n\n                that.angular(\"compile\", function() {\n                    return {\n                        elements: fileEntry,\n                        data: [ templateData ]\n                    };\n                });\n            }\n\n            progressbar = $(progressbarSelector, fileEntry[0]);\n            isProgressbar = progressbar.length > 0;\n\n            if (isProgressbar) {\n                that._progressbarInit(progressbar);\n            }\n\n            fileEntry\n                .attr(kendo.attr(\"uid\"), fileUid)\n                .appendTo(fileList)\n                .data(data);\n\n            if (!that._async && isProgressbar) {\n                progressbar.data(\"kendoProgressBar\").value(100);\n            }\n\n            if (!that.multiple && existingFileEntries.length > 0) {\n                removeEventArgs = {\n                    files: existingFileEntries.data(\"fileNames\"),\n                    headers: {}\n                };\n                if (!that.trigger(REMOVE, removeEventArgs)) {\n                    that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                }\n            }\n\n            return fileEntry;\n        },\n\n        _removeFileEntry: function(fileEntry) {\n            var that = this;\n            var fileList = fileEntry.closest(\".k-upload-files\");\n            var allFiles, allCompletedFiles, allInvalidFiles;\n\n            fileEntry.remove();\n            allFiles = $(\".k-file\", fileList);\n            allCompletedFiles = $(\".k-file-success, .k-file-error\", fileList);\n\n            if (allCompletedFiles.length === allFiles.length) {\n                this._hideActionButtons();\n            }\n\n            if (allFiles.length === 0) {\n                fileList.remove();\n                that.wrapper.addClass(\"k-upload-empty\");\n                that._hideHeaderUploadstatus();\n            } else {\n                that._updateHeaderUploadStatus();\n            }\n        },\n\n        _fileAction: function(fileElement, actionKey, skipClear) {\n            var iconsNameDictionary = { remove: \"x\", cancel: \"cancel\", retry: \"arrow-rotate-cw-small\", pause: \"pause-sm\" };\n            var firstActionButton;\n\n            if (!iconsNameDictionary.hasOwnProperty(actionKey)) {\n                return;\n            }\n            if (!skipClear) {\n                this._clearFileAction(fileElement);\n            }\n            if (!this.options.template) {\n                if (!skipClear) {\n                    fileElement.find(\".k-upload-action\").remove();\n                }\n                fileElement.find(\".k-upload-actions\").append(\n                    this._renderAction(iconsNameDictionary[actionKey], this.localization[actionKey], actionKey == \"retry\" ? \"k-i-retry\" : \"\")\n                );\n            } else {\n                firstActionButton = fileElement.find(\".k-upload-action\").first();\n                if (!firstActionButton.find(\".k-icon,.k-svg-icon\").length) {\n                    let firstActionIcon = kendo.ui.icon($(`<span title=\"${this.localization[actionKey]}\" aria-label=\"${this.localization[actionKey]}\"></span>`), {\n                        icon: iconsNameDictionary[actionKey],\n                        iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                    });\n                    firstActionButton\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(firstActionIcon)\n                        .show();\n                } else if (firstActionButton.next(\".k-upload-action\").length) {\n                    let firstActionIcon = kendo.ui.icon($(`<span title=\"${this.localization[actionKey]}\" aria-label=\"${this.localization[actionKey]}\"></span>`), {\n                        icon: iconsNameDictionary[actionKey],\n                        iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                    });\n                    firstActionButton.next(\".k-upload-action\")\n                        .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                        .append(firstActionIcon)\n                        .show();\n                }\n            }\n        },\n\n        _fileState: function(fileEntry, stateKey) {\n            var localization = this.localization,\n                states = {\n                    uploading: {\n                        text: localization.statusUploading\n                    },\n                    uploaded: {\n                        text: localization.statusUploaded\n                    },\n                    failed: {\n                        text: localization.statusFailed\n                    }\n                },\n                currentState = states[stateKey];\n\n            if (currentState) {\n                $(\"span.k-file-state\", fileEntry).text(currentState.text);\n            }\n        },\n\n        _renderAction: function(iconName, actionText, iconClass) {\n            if (iconName !== \"\") {\n                return $(\n                \"<button type='button' class='k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action' aria-label='\" + actionText + \"' tabindex='-1'>\" +\n                    kendo.ui.icon($(`<span title=\"${actionText}\"></span>`), { icon: iconName, iconClass: \"k-button-icon\" + (iconClass ? ` ${iconClass}` : \"\") }) +\n                \"</button>\"\n                ).on(\"focus\", function() { $(this).addClass(FOCUS_STATE); })\n                 .on(\"blur\", function() { $(this).removeClass(FOCUS_STATE); });\n            }\n            else {\n                return $(\n                \"<button type='button' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'>\" +\n                    '<span class=\"k-button-text\">' +\n                        actionText +\n                    '</span>' +\n                \"</button>\"\n                );\n            }\n        },\n\n        _clearFileAction: function(fileElement) {\n            $(\".k-upload-action\", fileElement).empty().hide();\n        },\n\n        _onFileAction: function(e) {\n            var that = this;\n            if (!that.wrapper.hasClass(\"k-disabled\")) {\n                var button = $(e.target).closest(\".k-upload-action\");\n                var icon = button.find(\".k-icon,.k-svg-icon\");\n                var fileEntry = button.closest(\".k-file\");\n                var files = fileEntry.data(\"fileNames\");\n                var hasValidationErrors = that._filesContainValidationErrors(files);\n                var eventArgs = {\n                    files: files,\n                    headers: {}\n                };\n\n                that._retryClicked = false;\n\n                if (icon.is(\".k-i-x,.k-svg-i-x\")) {\n                    if (!that.trigger(REMOVE, eventArgs)) {\n                        that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        that.element.trigger(\"focus\");\n                    }\n                } else if (icon.is(\".k-i-cancel,.k-svg-i-cancel\")) {\n                    that.trigger(CANCEL, eventArgs);\n                    that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                    that._checkAllComplete();\n                    that._updateHeaderUploadStatus();\n                    that.element.trigger(\"focus\");\n                } else if (icon.is(\".k-i-pause-sm,.k-svg-i-pause-sm\")) {\n                    that.trigger(PAUSE, eventArgs);\n                    that.pause(fileEntry);\n                    that._updateHeaderUploadStatus();\n                } else if (icon.is(\".k-i-play-sm,.k-svg-i-play-sm\")) {\n                    that.trigger(RESUME, eventArgs);\n                    that.resume(fileEntry);\n                } else if (icon.hasClass(\"k-i-retry\")) {\n                    $(\".k-i-exclamation-circle\", fileEntry).remove();\n                    $(PROGRESSBAR_SELECTOR, fileEntry).finish().show();\n                    that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                    that._retryClicked = true;\n                }\n\n                fileEntry.addClass(FOCUS_STATE);\n            }\n\n            return false;\n        },\n\n        _onUploadSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            if (!wrapper.hasClass(\"k-disabled\")) {\n                this._module.onSaveSelected();\n            }\n\n            return false;\n        },\n\n        _onClearSelected: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            var clearEventArgs = { };\n            if (!wrapper.hasClass(\"k-disabled\") && !that.trigger(CLEAR, clearEventArgs)) {\n                that.clearAllFiles();\n            }\n\n            return false;\n        },\n\n        _onFileProgress: function(e, percentComplete) {\n            var progressPct;\n            var progressBar = $(PROGRESSBAR_SELECTOR, e.target).data(\"kendoProgressBar\");\n\n            if (percentComplete > 100) {\n                percentComplete = 100;\n            }\n\n            $(PROGRESSBAR_SELECTOR, e.target).removeClass('k-hidden');\n\n            if (!this.options.template) {\n                progressPct = $(\".k-upload-pct\", e.target);\n\n                if (progressPct.length === 0) {\n                    $(\".k-upload-actions\", e.target).prepend(\"<span class='k-upload-pct'></span>\");\n                }\n\n                if (percentComplete !== 100) {\n                    $(\".k-upload-pct\", e.target).text(percentComplete + \"%\");\n                } else {\n                    $(\".k-upload-pct\", e.target).remove();\n                }\n            }\n\n            if (progressBar) {\n                progressBar.value(percentComplete);\n            }\n\n            this.trigger(PROGRESS, {\n                files: getFileEntry(e).data(\"fileNames\"),\n                percentComplete: percentComplete\n            });\n        },\n\n        _onUploadSuccess: function(e, response, xhr) {\n            var that = this;\n            var fileEntry = getFileEntry(e);\n            var files = fileEntry.data(\"fileNames\");\n            var fileInfo = fileEntry.find('.k-file-summary');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            var prevented = that.trigger(SUCCESS, {\n                files: fileEntry.data(\"fileNames\"),\n                response: response,\n                operation: \"upload\",\n                XMLHttpRequest: xhr\n            });\n\n            if (prevented) {\n                that._setUploadErrorState(fileEntry);\n            } else {\n                that._fileState(fileEntry, \"uploaded\");\n                fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\">' + that.localization.uploadSuccess + '</span>');\n                }\n\n                that._updateHeaderUploadStatus();\n\n                if (that._supportsRemove()) {\n                    that._fileAction(fileEntry, REMOVE);\n                } else {\n                    that._clearFileAction(fileEntry);\n                }\n            }\n\n            that._hideUploadProgress(fileEntry);\n\n            that._checkAllComplete();\n        },\n\n        _onUploadError: function(e, xhr) {\n            var that = this;\n            var module = that._module;\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            that._setUploadErrorState(fileEntry);\n\n            that.trigger(ERROR, {\n                operation: \"upload\",\n                files: fileEntry.data(\"fileNames\"),\n                XMLHttpRequest: xhr\n            });\n\n            logToConsole(\"Server response: \" + xhr.responseText);\n\n            if (!that.options.async.chunkSize) {\n                that._hideUploadProgress(fileEntry);\n            } else {\n                if (module._decreasePosition) {\n                    module._decreasePosition(fileUid);\n                }\n            }\n\n           that._checkAllComplete();\n\n            if (this.options.async.autoRetryAfter) {\n               this._autoRetryAfter(fileEntry);\n            }\n        },\n        _autoRetryAfter: function(fileEntry) {\n            var that = this;\n            var retries = this._module.retries;\n\n            if (!retries) {\n                return;\n            }\n\n            if (!retries[fileEntry.data(\"uid\")]) {\n                retries[fileEntry.data(\"uid\")] = 1;\n            }\n\n            if (retries[fileEntry.data(\"uid\")] <= this.options.async.maxAutoRetries) {\n                retries[fileEntry.data(\"uid\")]++;\n                setTimeout(function() {\n                    that._module.performUpload(fileEntry);\n                },this.options.async.autoRetryAfter);\n            }\n        },\n        _setUploadErrorState: function(fileEntry) {\n            var that = this,\n                uploadPercentage,\n                files = fileEntry.data(\"fileNames\"),\n                fileInfo = fileEntry.find('.k-file-summary'),\n                fileSize = fileEntry.find('.k-file-size');\n\n            that._fileState(fileEntry, \"failed\");\n            fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n\n            if (fileInfo.length > 0) {\n                fileInfo.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n            } else if (fileSize.length > 0) {\n                fileSize.addClass('k-hidden')\n                    .after('<span class=\"k-file-validation-message\">' + that.localization.uploadFail + '</span>');\n            }\n\n            that._updateUploadProgress(fileEntry);\n\n            uploadPercentage = $('.k-upload-pct', fileEntry);\n\n            if (uploadPercentage.length > 0) {\n                uploadPercentage.remove();\n            }\n\n            this._updateHeaderUploadStatus();\n            this._fileAction(fileEntry, \"retry\");\n            this._fileAction(fileEntry, REMOVE, true);\n\n            if (that._retryClicked) {\n                fileEntry.trigger(\"focus\");\n            }\n        },\n\n       _updateUploadProgress: function(fileEntry) {\n            var that = this;\n            var progressbar = $( PROGRESSBAR_SELECTOR, fileEntry);\n            var isProgressbar = progressbar.length > 0;\n\n            if (!that.options.async.chunkSize && isProgressbar) {\n                progressbar.data(\"kendoProgressBar\").value(100);\n            } else {\n                var fileUid = fileEntry.data(\"uid\");\n                if (that._module.metaData) {\n                    var fileMetaData = that._module.metaData[fileUid];\n\n                    if (fileMetaData) {\n                        var percentComplete = fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n\n                        that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                    }\n                }\n            }\n        },\n\n        _hideUploadProgress: function(fileEntry) {\n            var that = this;\n\n            $(PROGRESSBAR_SELECTOR, fileEntry)\n                .delay(PROGRESSHIDEDELAY)\n                .fadeOut(PROGRESSHIDEDURATION, function() {\n                    $(this).data(\"kendoProgressBar\").value(0);\n                });\n        },\n\n        _showActionButtons: function() {\n            var that = this;\n            var actionsWrapper = $(\".k-actions\", that.wrapper);\n            var uploadButton = $(\".k-upload-selected\", that.wrapper);\n            var clearButton = $(\".k-clear-selected\", that.wrapper);\n\n            if (uploadButton.length === 0) {\n                uploadButton = $(kendo.html.renderButton(`<button class='k-upload-selected'>${this.localization.uploadSelectedFiles}</button>`, {\n                        icon: 'upload',\n                        themeColor: 'primary'\n                    }));\n\n                clearButton = $(kendo.html.renderButton(`<button class='k-clear-selected'>${this.localization.clearSelectedFiles}</button>`, {\n                    icon: 'clear'\n                }));\n\n            }\n\n            if (!actionsWrapper.length) {\n                actionsWrapper = $(\"<div />\")\n                    .addClass(\"k-actions\")\n                    .append(uploadButton, clearButton);\n            }\n\n\n            this.wrapper.append(actionsWrapper);\n        },\n\n        _hideActionButtons: function() {\n            $(\".k-actions\", this.wrapper).remove();\n        },\n\n        _showHeaderUploadStatus: function(isUploading) {\n            var that = this;\n            var localization = that.localization;\n            var dropZone = $(\".k-dropzone\", that.wrapper);\n            var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n\n            if (headerUploadStatus.length !== 0) {\n                headerUploadStatus.remove();\n            }\n\n            $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n\n            headerUploadStatus = '<span class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></span>';\n\n            if (isUploading) {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.loading });\n            } else {\n                headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.warning });\n            }\n\n            if (dropZone.length > 0) {\n                dropZone.append(headerUploadStatus);\n            } else {\n                $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n            }\n        },\n\n        _updateHeaderUploadStatus: function() {\n            var that = this;\n            var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n            var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error');\n            var currentlyFailed = $('.k-file-error', that.wrapper);\n            var currentlyPaused = $('.k-file', that.wrapper).find(\".k-i-play-sm,.k-svg-i-play-sm\");\n            var headerUploadStatusIcon;\n\n            if (currentlyPaused.length &&\n            (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                if (headerUploadStatusIcon.length) {\n                    kendo.ui.icon(headerUploadStatusIcon, { icon: \"pause-sm\" });\n\n                    headerUploadStatus.html(headerUploadStatusIcon)\n                        .append(that.localization.headerStatusPaused);\n                }\n            } else if (currentlyUploading.length === 0 || currentlyFailed.length > 0) {\n                headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                if (headerUploadStatusIcon.length) {\n\n                    kendo.ui.icon(headerUploadStatusIcon, { icon: currentlyFailed.length !== 0 ? headerStatusIconName.warning : headerStatusIconName.success });\n\n                    headerUploadStatus.html(headerUploadStatusIcon)\n                        .append(that.localization.headerStatusUploaded);\n                }\n            }\n        },\n\n        _hideHeaderUploadstatus: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            $('.k-upload-status-total', this.wrapper).remove();\n\n            if (dropZone === \"\") {\n                $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n            }\n        },\n\n        _onParentFormSubmit: function() {\n            var upload = this,\n                element = upload.element;\n\n            if (typeof this._module.onAbort !== 'undefined') {\n                this._module.onAbort();\n            }\n\n            if (!element.value) {\n                var input = $(element);\n\n                // Prevent submitting an empty input\n                input.attr(\"disabled\", \"disabled\");\n\n                window.setTimeout(function() {\n                    // Restore the input so the Upload remains functional\n                    // in case the user cancels the form submit\n                    input.prop(\"disabled\", false);\n                }, 0);\n            }\n        },\n\n        _onParentFormReset: function() {\n            $(\".k-upload-files\", this.wrapper).remove();\n        },\n\n        _supportsFormData: function() {\n            return typeof(FormData) != \"undefined\";\n        },\n\n        _supportsMultiple: function() {\n            var windows = this._userAgent().indexOf(\"Windows\") > -1;\n\n            return !kendo.support.browser.opera &&\n                   !(kendo.support.browser.safari && windows);\n        },\n\n        _supportsDrop: function() {\n            var userAgent = this._userAgent().toLowerCase();\n            var isChrome = /chrome/.test(userAgent);\n            var isSafari = !isChrome && /safari/.test(userAgent);\n            var isWindowsSafari = isSafari && /windows/.test(userAgent);\n\n            return !isWindowsSafari && this._supportsFormData() && (this.options.async.saveUrl);\n        },\n\n        _userAgent: function() {\n            return navigator.userAgent;\n        },\n\n        _setupDropZone: function() {\n            var that = this;\n\n            var ns = that._ns;\n            var dropZone = $(\".k-dropzone\", that.wrapper)\n\n                .on(\"dragenter\" + ns, stopEvent)\n                .on(\"dragover\" + ns, function(e) {\n                    if (e.originalEvent) {\n                        e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                    }\n                    e.preventDefault();\n                 })\n                .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            if (!dropZone.find(\".k-dropzone-hint\").length) {\n                dropZone.append($(\"<span class='k-dropzone-hint'>\" + that.localization.dropFilesHere + \"</span>\"));\n            }\n\n            bindDragEventWrappers(dropZone, ns,\n                function() {\n                    if (!dropZone.closest('.k-upload').hasClass(\"k-disabled\")) {\n                        dropZone.addClass(HOVER_STATE);\n                    }\n                },\n                function() { dropZone.removeClass(HOVER_STATE); });\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _setupCustomDropZone: function() {\n            var that = this;\n            var dropZone = $(that.options.dropZone);\n\n            if (!that.wrapper.find(\".k-dropzone-hint\").length) {\n                $(\".k-dropzone\", that.wrapper)\n                    .append($(\"<span class='k-dropzone-hint k-hidden'>\" + that.localization.dropFilesHere + \"</span>\"));\n            } else {\n                // Dropzone hint in upload should be hidden if customDropZone is used\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n            }\n\n            var ns = that._ns;\n            dropZone.on(\"dragenter\" + ns, stopEvent)\n                    .on(\"dragover\" + ns, function(e) {\n                        if (e.originalEvent) {\n                            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                        }\n                        e.preventDefault();\n                    })\n                    .on(\"drop\" + ns, that._onDrop.bind(that));\n\n            bindDragEventWrappers(dropZone, ns,\n                function(e) {\n                    if (!that.wrapper.hasClass(\"k-disabled\")) {\n                        dropZone.removeClass(HOVER_STATE);\n                        dropZone.addClass(HOVER_STATE);\n                        $(e.target).addClass(HOVER_STATE);\n                    }\n                },\n                function() {\n                    dropZone.removeClass(HOVER_STATE);\n                }\n            );\n\n            that._bindDocumentDragEventWrappers(dropZone);\n        },\n\n        _bindDocumentDragEventWrappers: function(dropZone) {\n            var that = this;\n            var ns = that._ns;\n\n            bindDragEventWrappers($(document), ns,\n                function() {\n                    if (!that.wrapper.hasClass(\"k-disabled\")) {\n                        dropZone.addClass(\"k-dropzone-active\");\n                        dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                        dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                    }\n                },\n                function() {\n                    dropZone.removeClass(\"k-dropzone-active\");\n                    dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                    if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                        dropZone.closest('.k-upload').addClass('k-upload-empty');\n                    }\n                }\n            );\n        },\n\n        _toggleDropZone: function() {\n            var that = this,\n                dropZone = that.options.dropZone;\n\n            if (!that._supportsDrop()) {\n                return;\n            }\n\n            $(dropZone).off(that._ns);\n            $(\".k-dropzone\", that.wrapper).off(that._ns);\n\n            if (dropZone !== \"\") {\n                that._setupCustomDropZone();\n            } else {\n                that._setupDropZone();\n            }\n        },\n\n        _supportsRemove: function() {\n            return !!this.options.async.removeUrl;\n        },\n\n        _submitRemove: function(fileNames, eventArgs, onSuccess, onError) {\n            var upload = this,\n                removeField = upload.options.async.removeField || \"fileNames\",\n                params = $.extend(eventArgs.data, antiForgeryTokens());\n\n            params[removeField] = fileNames;\n\n            jQuery.ajax({\n                  type: this.options.async.removeVerb,\n                  dataType: \"json\",\n                  dataFilter: normalizeJSON,\n                  url: this.options.async.removeUrl,\n                  traditional: true,\n                  data: params,\n                  headers: eventArgs.headers,\n                  success: onSuccess,\n                  error: onError,\n                  xhrFields: {\n                    withCredentials: this.options.async.withCredentials\n                  }\n            });\n        },\n\n        _wrapInput: function(input) {\n            var that = this;\n            var options = that.options;\n            var hasLabel = !!input.attr(\"id\") && $(\"[for='\" + input.attr(\"id\") + \"']\").length > 0;\n            var uploadButton = $(\"<div class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button'><span class='k-button-text'>Select files...</span></div>\");\n\n            input.wrap(\"<div class='k-upload'><div class='k-dropzone k-upload-dropzone'><div class='k-upload-button-wrap'></div></div></div>\");\n            uploadButton.prependTo(input.parent());\n\n            if (!options.async.saveUrl) {\n                input.closest(\".k-upload\").addClass(\"k-upload-sync\");\n            } else {\n                input.closest(\".k-upload\").addClass(\"k-upload-async\");\n            }\n\n            input.closest(\".k-upload\").addClass(\"k-upload-empty\");\n\n            input.closest(\".k-button\")\n                .append(\"<span>\" + that.localization.select + \"</span>\");\n\n            if (!hasLabel && !input.attr(\"aria-label\")) {\n                input.attr(\"aria-label\", that.localization.select);\n            }\n\n            return input.closest(\".k-upload\");\n        },\n\n        _checkAllComplete: function() {\n            if ($(\".k-file.k-file-progress\", this.wrapper).length === 0) {\n                this.trigger(COMPLETE);\n            }\n        },\n\n        _inputFiles: function(sourceInput) {\n            return inputFiles(sourceInput);\n        }\n    });\n\n    // Synchronous upload module\n    var syncUploadModule = function(upload) {\n        this.name = \"syncUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.element\n            .closest(\"form\")\n                .attr(\"enctype\", \"multipart/form-data\")\n                .attr(\"encoding\", \"multipart/form-data\");\n    };\n\n    syncUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var filesContainErrors = upload._filesContainValidationErrors(files);\n\n            upload._addInput(sourceInput);\n\n            var fileData = { \"fileNames\": files };\n\n            if (filesContainErrors) {\n                sourceInput.remove();\n            } else {\n                fileData.relatedInput = sourceInput;\n            }\n\n            var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (filesContainErrors) {\n                upload._hideUploadProgress(file);\n            }\n\n            upload._fileAction(file, REMOVE);\n        },\n\n        onRemove: function(e) {\n            var fileEntry = getFileEntry(e);\n            var relatedInput = fileEntry.data(\"relatedInput\");\n\n            if (relatedInput) {\n                relatedInput.remove();\n            }\n\n            this.upload._removeFileEntry(fileEntry);\n        }\n    };\n\n    var iframeUploadModule = function(upload) {\n        this.name = \"iframeUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.iframes = [];\n    };\n\n    Upload._frameId = 0;\n\n    iframeUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var sourceInput = $(e.target);\n            var hasValidationErrors = upload._filesContainValidationErrors(files);\n\n            var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n\n            if (upload.options.async.autoUpload) {\n                if (!hasValidationErrors) {\n                    this.performUpload(fileEntry);\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n                    upload._showHeaderUploadStatus(false);\n                }\n            } else {\n                upload._fileAction(fileEntry, REMOVE);\n\n                if (!hasValidationErrors) {\n                    upload._showActionButtons();\n                } else {\n                    upload._updateHeaderUploadStatus();\n                }\n            }\n\n            if (hasValidationErrors) {\n                upload._hideUploadProgress(fileEntry);\n            }\n        },\n\n        prepareUpload: function(sourceInput, files, hasValidationErrors) {\n            var upload = this.upload;\n            var activeInput = $(upload.element);\n            var name = upload.options.async.saveField || sourceInput.attr(\"name\");\n            var fileEntry, fileData, iframe, form;\n\n            upload._addInput(sourceInput);\n            sourceInput.attr(\"name\", name);\n\n            if (!hasValidationErrors) {\n                iframe = this.createFrame(upload.name + \"_\" + Upload._frameId++);\n                this.registerFrame(iframe);\n\n                form = this.createForm(upload.options.async.saveUrl, iframe.attr(\"name\"))\n                    .append(activeInput);\n\n                fileData = { \"frame\": iframe, \"relatedInput\": activeInput, \"fileNames\": files };\n            } else {\n                sourceInput.remove();\n\n                fileData = { \"fileNames\": files };\n            }\n\n            fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n            if (iframe) {\n                iframe.data({ \"form\": form, \"file\": fileEntry });\n            }\n\n            return fileEntry;\n        },\n\n        performUpload: function(fileEntry) {\n            var e = { files: fileEntry.data(\"fileNames\") };\n            var iframe = fileEntry.data(\"frame\");\n            var upload = this.upload;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-summary');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                upload._hideActionButtons();\n                upload._showHeaderUploadStatus(true);\n\n                iframe.appendTo(document.body);\n\n                var form = iframe.data(\"form\")\n                    .attr(\"action\", upload.options.async.saveUrl)\n                    .appendTo(document.body);\n\n                e.data = $.extend({ }, e.data, antiForgeryTokens());\n                for (var key in e.data) {\n                    var dataInput = form.find(\"input[name='\" + key + \"']\");\n                    if (dataInput.length === 0) {\n                        dataInput = $(\"<input>\", { type: \"hidden\", name: key })\n                            .prependTo(form);\n                    }\n                    dataInput.val(e.data[key]);\n                }\n\n                upload._fileAction(fileEntry, CANCEL);\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                iframe\n                    .one(\"load\", this.onIframeLoad.bind(this));\n\n                form[0].submit();\n            } else {\n                upload._removeFileEntry(iframe.data(\"file\"));\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n            }\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-file\", this.element).each(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                if (!started && !hasValidationErrors) {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onIframeLoad: function(e) {\n            var iframe = $(e.target),\n                responseText;\n\n            try {\n                responseText = iframe.contents().text();\n            } catch (ex) {\n                responseText = \"Error trying to get server response: \" + ex;\n            }\n\n            this.processResponse(iframe, responseText);\n        },\n\n        processResponse: function(iframe, responseText) {\n            var fileEntry = iframe.data(\"file\"),\n                module = this,\n                fakeXHR = {\n                    responseText: responseText\n                };\n            tryParseJSON(responseText,\n                function(jsonResult) {\n                    $.extend(fakeXHR, { statusText: \"OK\", status: \"200\" });\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n\n                    module.cleanupFrame(iframe);\n                    module.unregisterFrame(iframe);\n                },\n                function() {\n                    $.extend(fakeXHR, { statusText: \"error\", status: \"500\" });\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                }\n            );\n        },\n\n        onCancel: function(e) {\n            var iframe = $(e.target).data(\"frame\");\n\n            this.stopFrameSubmit(iframe);\n            this.cleanupFrame(iframe);\n            this.unregisterFrame(iframe);\n            this.upload._removeFileEntry(iframe.data(\"file\"));\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var iframe = fileEntry.data(\"frame\");\n\n            if (iframe) {\n                module.unregisterFrame(iframe);\n                upload._removeFileEntry(fileEntry);\n                module.cleanupFrame(iframe);\n            } else {\n                if (fileEntry.hasClass(\"k-file-success\")) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    upload._removeFileEntry(fileEntry);\n                }\n            }\n        },\n\n        onAbort: function() {\n            var element = this.element,\n                module = this;\n\n            $.each(this.iframes, function() {\n                $(\"input\", this.data(\"form\")).appendTo(element);\n                module.stopFrameSubmit(this[0]);\n                this.data(\"form\").remove();\n                this.remove();\n            });\n\n            this.iframes = [];\n        },\n\n        createFrame: function(id) {\n            return $(\n                \"<iframe\" +\n                \" name='\" + id + \"'\" +\n                \" id='\" + id + \"'\" +\n                \" style='display:none;' />\"\n            );\n        },\n\n        createForm: function(action, target) {\n            return $(\n                \"<form enctype='multipart/form-data' method='POST'\" +\n                \" action='\" + action + \"'\" +\n                \" target='\" + target + \"'\" +\n                \"/>\");\n        },\n\n        stopFrameSubmit: function(frame) {\n            if (typeof(frame.stop) != \"undefined\") {\n                frame.stop();\n            } else if (frame.document) {\n                frame.document.execCommand(\"Stop\");\n            }\n        },\n\n        registerFrame: function(frame) {\n            this.iframes.push(frame);\n        },\n\n        unregisterFrame: function(frame) {\n            this.iframes = $.grep(this.iframes, function(value) {\n                return value.attr(\"name\") != frame.attr(\"name\");\n            });\n        },\n\n        cleanupFrame: function(frame) {\n            var form = frame.data(\"form\");\n\n            frame.data(\"file\").data(\"frame\", null);\n\n            setTimeout(function() {\n                form.remove();\n                frame.remove();\n            }, 1);\n        }\n    };\n\n    // FormData upload module\n    var formDataUploadModule = function(upload) {\n        this.name = \"formDataUploadModule\";\n        this.element = upload.wrapper;\n        this.upload = upload;\n        this.position = {};\n        this.metaData = {};\n        this.cancelled = {};\n        this.resume = {};\n        this.paused = {};\n        this.retries = {};\n    };\n\n    formDataUploadModule.prototype = {\n        onSelect: function(e, files) {\n            var upload = this.upload;\n            var module = this;\n            var sourceElement = $(e.target);\n            var fileEntries = this.prepareUpload(sourceElement, files);\n            var hasValidationErrors;\n            var prev;\n\n            $.each(fileEntries, function(index) {\n                hasValidationErrors = upload._filesContainValidationErrors($(this.data(\"fileNames\")));\n\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        if (upload.options.async.chunkSize) {\n                            module.prepareChunk(this);\n                            prev = this.prev();\n\n                            if (upload.options.async.concurrent || (index === 0 && !prev.length) ||\n                             (index === 0 && prev.hasClass(\"k-file-success\"))) {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            module.performUpload(this);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(this, REMOVE);\n\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                        this.addClass(\"k-toupload\");\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(this);\n                }\n            });\n        },\n\n        prepareUpload: function(sourceElement, files) {\n            var fileEntries = this.enqueueFiles(files);\n\n            if (sourceElement.is(\"input\")) {\n                $.each(fileEntries, function() {\n                    $(this).data(\"relatedInput\", sourceElement);\n                });\n                sourceElement.data(\"relatedFileEntries\", fileEntries);\n                this.upload._addInput(sourceElement);\n            }\n\n            return fileEntries;\n        },\n\n        enqueueFiles: function(files) {\n            var upload = this.upload;\n            var name;\n            var i;\n            var filesLength = files.length;\n            var currentFile;\n            var fileEntry;\n            var fileEntries = [];\n\n            if (upload.options.async.batch === true) {\n                name = $.map(files, function(file) { return file.name; }).join(\", \");\n\n                if (upload.directory || upload.options.directoryDrop) {\n                    $(files).each(function() {\n                        if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                            this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                        }\n                    });\n                }\n\n                fileEntry = upload._enqueueFile(name, { fileNames: files });\n                fileEntry.data(\"files\", files);\n\n                fileEntries.push(fileEntry);\n            } else {\n                for (i = 0; i < filesLength; i++) {\n                    currentFile = files[i];\n                    name = currentFile.name;\n                    if (upload.directory || upload.options.directoryDrop) {\n                        if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                            currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                        }\n                    }\n                    fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                    fileEntry.data(\"files\", [currentFile]);\n\n                    fileEntries.push(fileEntry);\n                }\n            }\n\n            return fileEntries;\n        },\n\n        performUpload: function(fileEntry) {\n            var upload = this.upload,\n                formData = this.createFormData(),\n                xhr = this.createXHR(),\n                e = {\n                    files: fileEntry.data(\"fileNames\"),\n                    XMLHttpRequest: xhr\n                },\n                files;\n            var fileValidation = fileEntry.find('.k-file-validation-message');\n            var fileInfo = fileEntry.find('.k-file-summary');\n            var fileSize = fileEntry.find('.k-file-size');\n\n            if (!upload.trigger(UPLOAD, e)) {\n                if (fileEntry.find(\".k-i-cancel,.k-svg-i-cancel\").length === 0) {\n                    if (upload.options.async.chunkSize) {\n                        upload._fileAction(fileEntry, PAUSE);\n                    }\n                    upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                }\n\n                if (!upload.wrapper.find(\".k-toupload\").length) {\n                    upload._hideActionButtons();\n                }\n\n                upload._showHeaderUploadStatus(true);\n\n                if (e.formData) {\n                    formData = e.formData;\n                } else {\n                    e.data = $.extend({ }, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        formData.append(key, e.data[key]);\n                    }\n\n                    files = fileEntry.data(\"files\");\n                    if (files) {\n                        this.populateFormData(formData, files);\n                    }\n                }\n\n                upload._fileState(fileEntry, \"uploading\");\n                $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                if (fileValidation.length > 0) {\n                    fileValidation.remove();\n                }\n\n                if (fileInfo.length > 0) {\n                    fileInfo.removeClass('k-hidden');\n                } else if (fileSize.length > 0) {\n                    fileSize.removeClass('k-hidden');\n                }\n\n                if (upload.options.async.useArrayBuffer && window.FileReader) {\n                    this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                } else {\n                    this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                }\n            } else {\n                this.removeFileEntry(fileEntry);\n            }\n        },\n\n        _readFile: function(saveUrl, formData, fileEntry, xhr) {\n            var that = this;\n            var upload = that.upload;\n            var file = fileEntry.data(\"files\")[0];\n\n            var reader = new FileReader();\n            reader.onload = function(e) {\n                try {\n                    if (!that.fileArrayBuffer) {\n                        that.fileArrayBuffer = e.target.result;\n                    } else {\n                        that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                    }\n                } catch (err) {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                    return;\n                }\n\n                if (that.position[file.uid] > file.size) {\n                    that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                    that.fileArrayBuffer = null;\n                } else {\n                    that._readFile(saveUrl, formData, fileEntry, xhr);\n                }\n            };\n            reader.onerror = function() {\n                upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n            };\n            reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n        },\n\n        _appendBuffer: function(buffer1, buffer2) {\n            var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n\n            tmp.set(new Uint8Array(buffer1), 0);\n            tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n\n            return tmp.buffer;\n        },\n\n        onSaveSelected: function() {\n            var module = this;\n            var upload = module.upload;\n\n            $(\".k-toupload\", this.element).filter(function() {\n                var fileEntry = $(this);\n                var started = isFileUploadStarted(fileEntry);\n                var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                return !started && !hasValidationErrors;\n            }).each(function(index) {\n                var fileEntry = $(this);\n                var prevEntry = fileEntry.prev();\n\n                fileEntry.removeClass(\"k-toupload\");\n                if (upload.options.async.chunkSize) {\n                    module.prepareChunk(fileEntry);\n\n                    if (upload.options.async.concurrent || (index === 0 && !prevEntry.length) ||\n                        (index === 0 && prevEntry.hasClass(\"k-file-success\") || prevEntry.hasClass(\"k-file-error:not(k-file-invalid)\"))) {\n                        module.performUpload(fileEntry);\n                    }\n                } else {\n                    module.performUpload(fileEntry);\n                }\n            });\n        },\n\n        onCancel: function(e) {\n            var fileEntry = getFileEntry(e);\n\n            if (this.upload.options.async.chunkSize) {\n                this.cancelled[fileEntry.data(\"uid\")] = true;\n            }\n            this.stopUploadRequest(fileEntry);\n            this.removeFileEntry(fileEntry);\n        },\n\n        onPause: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileUid] = async.maxAutoRetries + 1;\n                this.paused[fileUid] = true;\n                this.resume[fileUid] = false;\n            }\n        },\n\n        onResume: function(e) {\n            var fileEntry = getFileEntry(e);\n            var fileUid = fileEntry.data(\"uid\");\n\n            if (this.upload.options.async.chunkSize) {\n                delete this.paused[fileUid];\n                this.resume[fileUid] = true;\n                this.retries[fileEntry.data(\"uid\")] = 1;\n                this._increaseChunkIndex(fileUid);\n                this.performUpload(fileEntry);\n            }\n        },\n\n        onRetry: function(e) {\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                delete this.paused[fileEntry.data(\"uid\")];\n            }\n\n            this.performUpload(fileEntry);\n        },\n\n        onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n            var module = this;\n            var upload = module.upload;\n            var fileEntry = getFileEntry(e);\n            var async = this.upload.options.async;\n\n            if (async.chunkSize) {\n                this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n            }\n\n            if (fileEntry.hasClass(\"k-file-success\")) {\n                removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n            } else {\n                module.removeFileEntry(fileEntry);\n            }\n        },\n\n        createXHR: function() {\n            return new XMLHttpRequest();\n        },\n\n        postFormData: function(url, data, fileEntry, xhr) {\n            var module = this;\n\n            fileEntry.data(\"request\", xhr);\n\n            xhr.addEventListener(\"load\", function(e) {\n                module.onRequestSuccess.call(module, e, fileEntry);\n            }, false);\n\n            xhr.addEventListener(ERROR, function(e) {\n                module.onRequestError.call(module, e, fileEntry);\n            }, false);\n\n            xhr.upload.addEventListener(\"progress\", function(e) {\n                module.onRequestProgress.call(module, e, fileEntry);\n            }, false);\n\n            xhr.open(\"POST\", url, true);\n            xhr.withCredentials = this.upload.options.async.withCredentials;\n\n            var accept = this.upload.options.async.accept;\n            if (accept) {\n                xhr.setRequestHeader(\"Accept\", accept);\n            }\n\n            xhr.send(data);\n        },\n\n        createFormData: function() {\n            return new FormData();\n        },\n\n        populateFormData: function(data, files) {\n            var chunk;\n            var i;\n            var length = files.length;\n            var uid;\n            var upload = this.upload;\n\n            if (upload.options.async.chunkSize) {\n                 uid = files[0].uid;\n                 chunk = this._getCurrentChunk(files[0].rawFile, uid);\n\n                data.append(\n                    upload.options.async.saveField || upload.name,\n                    chunk\n                );\n\n                var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                data.append(\"metadata\", serializedMetaData);\n            } else {\n                 for (i = 0; i < length; i++) {\n                    data.append(\n                        upload.options.async.saveField || upload.name,\n                        files[i].rawFile\n                    );\n                 }\n            }\n\n            return data;\n        },\n\n        onRequestSuccess: function(e, fileEntry) {\n            var xhr = e.target,\n                module = this;\n\n            function raiseError() {\n                module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n            }\n\n            function parseSuccess(jsonResult) {\n                var batch = module.upload.options.async.batch;\n                var chunkSize = module.upload.options.async.chunkSize;\n                var concurrent = module.upload.options.async.concurrent;\n                var fileUid = jsonResult.fileUid;\n\n                if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                    return;\n                }\n\n                delete module.retries[fileUid];\n\n                if (chunkSize && !batch && !jsonResult.uploaded) {\n\n                    module._increaseChunkIndex(fileUid);\n                    module.performUpload(fileEntry);\n                } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass(\"k-toupload\")) {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module._resetChunkIndex(fileUid);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n\n                        module.performUpload(fileEntry.next());\n                } else {\n                    module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                    module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                    module.cleanupFileEntry(fileEntry);\n                }\n            }\n\n            if (xhr.status >= 200 && xhr.status <= 299) {\n                tryParseJSON(xhr.responseText,\n                    parseSuccess,\n                    raiseError\n                );\n            } else {\n                raiseError();\n            }\n        },\n\n        onRequestError: function(e, fileEntry) {\n            var xhr = e.target;\n\n            this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n        },\n\n        cleanupFileEntry: function(fileEntry) {\n            var relatedInput = fileEntry.data(\"relatedInput\"),\n                uploadComplete = true;\n\n            if (relatedInput) {\n                $.each(relatedInput.data(\"relatedFileEntries\") || [], function() {\n                    // Exclude removed file entries and self\n                    if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                        uploadComplete = uploadComplete && this.hasClass(\"k-file-success\");\n                    }\n                });\n\n                if (uploadComplete) {\n                    relatedInput.remove();\n                }\n            }\n        },\n\n        removeFileEntry: function(fileEntry) {\n            var chunkSize = this.upload.options.async.chunkSize;\n            var concurrent = this.upload.options.async.concurrent;\n            var isUploadButtonVisible = this.upload.wrapper.find(\".k-upload-selected\").length > 0;\n\n            this.cleanupFileEntry(fileEntry);\n            if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                 if (fileEntry.next().length) {\n                     this.performUpload(fileEntry.next());\n                 }\n            }\n            this.upload._removeFileEntry(fileEntry);\n        },\n\n        onRequestProgress: function(e, fileEntry) {\n            var percentComplete = Math.round(e.loaded * 100 / e.total);\n            var fileUid = fileEntry.data(\"uid\");\n            var fileMetaData;\n\n            if (this.upload.options.async.chunkSize) {\n                fileMetaData = this.metaData[fileUid];\n                percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n            }\n            this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n        },\n\n        stopUploadRequest: function(fileEntry) {\n            if (fileEntry.data(\"request\")) {\n                fileEntry.data(\"request\").abort();\n            }\n        },\n\n        prepareChunk: function(fileEntry) {\n            var file = fileEntry.data(\"files\")[0];\n            var rawFile = file.rawFile;\n            var uid = file.uid;\n            var chunkSize = this.upload.options.async.chunkSize;\n            this.position[uid] = 0;\n\n            this.metaData[uid] = {\n                chunkIndex: 0,\n                contentType: rawFile.type,\n                fileName: rawFile.name,\n                relativePath: file.name,\n                totalFileSize: rawFile.size,\n                totalChunks: Math.ceil(rawFile.size / chunkSize),\n                uploadUid: uid\n            };\n        },\n\n        _decreaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex--;\n        },\n\n        _increaseChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex++;\n        },\n\n        _resetChunkIndex: function(uid) {\n            this.metaData[uid].chunkIndex = 0;\n        },\n\n        _decreasePosition: function(uid) {\n            this.position[uid] -= this.upload.options.async.chunkSize;\n        },\n\n        _getCurrentChunk: function(file, uid) {\n            var oldPosition = this.position[uid];\n            var methodToInvoke;\n            var async = this.upload.options.async;\n            var chunkSize = async.chunkSize || async.bufferChunkSize;\n\n            if (!this.position[uid]) {\n                this.position[uid] = 0;\n            }\n            this.position[uid] += chunkSize;\n\n            if (!!(methodToInvoke = this._getChunker(file))) {\n                return file[methodToInvoke](oldPosition, this.position[uid]);\n            } else {\n                return file;\n            }\n        },\n\n        _getChunker: function(file) {\n            if (file.slice) {\n                return \"slice\";\n            } else if (file.mozSlice) {\n                return \"mozSlice\";\n            } else if (file.webkitSlice) {\n                    return \"webkitSlice\";\n            } else {\n                return null;\n            }\n        }\n    };\n\n    // Helper functions\n    function getFileName(input) {\n        return $.map(inputFiles(input), function(file) {\n            return file.name;\n        }).join(\", \");\n    }\n\n    function inputFiles($input) {\n        var input = $input[0];\n\n        if (input.files) {\n            return getAllFileInfo(input.files);\n        } else {\n            return [{\n                name: stripPath(input.value),\n                extension: getFileExtension(input.value),\n                size: null\n            }];\n        }\n    }\n\n    function getAllFileInfo(rawFiles) {\n        return $.map(rawFiles, function(file) {\n            return getFileInfo(file);\n        });\n    }\n\n    function getFileInfo(rawFile) {\n        // Older Firefox versions (before 3.6) use fileName and fileSize\n        var fileName = rawFile.name || rawFile.fileName;\n        return {\n            name: kendo.htmlEncode(fileName),\n            extension: getFileExtension(fileName),\n            size: typeof rawFile.size == \"number\" ? rawFile.size : rawFile.fileSize, //rawFile.size || rawFile.fileSize,\n            rawFile: rawFile\n        };\n    }\n\n    function getFileExtension(fileName) {\n        var matches = fileName.match(rFileExtension);\n        return matches ? matches[0] : \"\";\n    }\n\n    function stripPath(name) {\n        var slashIndex = name.lastIndexOf(\"\\\\\");\n        return (slashIndex != -1) ? name.substr(slashIndex + 1) : name;\n    }\n\n    function assignGuidToFiles(files, unique) {\n        var uid = kendo.guid();\n\n        return $.map(files, function(file) {\n            file.uid = unique ? kendo.guid() : uid;\n\n            return file;\n        });\n    }\n\n    function validateFiles(files, validationInfo) {\n        var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n        var maxFileSize = validationInfo.maxFileSize;\n        var minFileSize = validationInfo.minFileSize;\n\n        for (var i = 0; i < files.length; i++) {\n            validateFileExtension(files[i], allowedExtensions);\n            validateFileSize(files[i], minFileSize, maxFileSize);\n        }\n    }\n\n    function parseAllowedExtensions(extensions) {\n        var allowedExtensions = $.map(extensions, function(ext) {\n            var parsedExt = (ext.substring(0, 1) === \".\") ? ext : (\".\" + ext);\n            return parsedExt.toLowerCase();\n        });\n\n        return allowedExtensions;\n    }\n\n    function validateFileExtension(file, allowedExtensions) {\n        if (allowedExtensions.length > 0) {\n            if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDFILEEXTENSION);\n                }\n            }\n        }\n    }\n\n    function validateFileSize(file, minFileSize, maxFileSize) {\n        if (minFileSize !== 0 && file.size < minFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMINFILESIZE);\n            }\n        }\n\n        if (maxFileSize !== 0 && file.size > maxFileSize) {\n            file.validationErrors = file.validationErrors || [];\n            if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                file.validationErrors.push(INVALIDMAXFILESIZE);\n            }\n        }\n    }\n\n    function getTotalFilesSizeMessage(files) {\n        var totalSize = 0;\n\n        if (typeof files[0].size == \"number\") {\n            for (var i = 0; i < files.length; i++) {\n                if (files[i].size) {\n                    totalSize += files[i].size;\n                }\n            }\n        } else {\n            return \"\";\n        }\n\n        totalSize /= 1024;\n\n        if (totalSize < 1024) {\n            return totalSize.toFixed(2) + \" KB\";\n        } else {\n            return (totalSize / 1024).toFixed(2) + \" MB\";\n        }\n    }\n\n    function shouldRemoveFileEntry(upload) {\n        return !upload.multiple && $(\".k-file\", upload.wrapper).length > 1;\n    }\n\n    function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n        if (!upload._supportsRemove()) {\n            if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                upload._removeFileEntry(fileEntry);\n            }\n\n            return;\n        }\n\n        var files = fileEntry.data(\"fileNames\");\n        var fileNames = $.map(files, function(file) { return file.name; });\n\n        if (shouldSendRemoveRequest === false) {\n            upload._removeFileEntry(fileEntry);\n\n            return;\n        }\n\n        upload._submitRemove(fileNames, eventArgs,\n            function onSuccess(data, textStatus, xhr) {\n                var prevented = upload.trigger(SUCCESS, {\n                    operation: \"remove\",\n                    files: files,\n                    response: data,\n                    XMLHttpRequest: xhr\n                });\n\n                if (!prevented) {\n                    upload._removeFileEntry(fileEntry);\n                }\n            },\n\n            function onError(xhr) {\n                if (shouldRemoveFileEntry(upload)) {\n                    upload._removeFileEntry(fileEntry);\n                }\n\n                upload.trigger(ERROR, {\n                    operation: \"remove\",\n                    files: files,\n                    XMLHttpRequest: xhr\n                });\n\n                logToConsole(\"Server response: \" + xhr.responseText);\n            }\n        );\n    }\n\n    function tryParseJSON(input, onSuccess, onError) {\n        var success = false,\n            json = \"\";\n\n        try {\n            json = JSON.parse(normalizeJSON(input));\n            success = true;\n        } catch (e) {\n            onError();\n        }\n\n        if (success) {\n            onSuccess(json);\n        }\n    }\n\n    function normalizeJSON(input) {\n        if (typeof input === \"undefined\" || input === \"\") {\n            input = \"{}\";\n        }\n\n        return input;\n    }\n\n    function stopEvent(e) {\n        if (e.originalEvent) {\n            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n        }\n        e.stopPropagation(); e.preventDefault();\n    }\n\n    function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n        var hideInterval, lastDrag;\n\n        element\n            .on(\"dragenter\" + namespace, function(e) {\n                onDragEnter(e);\n                lastDrag = new Date();\n\n                if (!hideInterval) {\n                    hideInterval = setInterval(function() {\n                        var sinceLastDrag = new Date() - lastDrag;\n                        if (sinceLastDrag > 100) {\n                            onDragLeave();\n\n                            clearInterval(hideInterval);\n                            hideInterval = null;\n                        }\n                    }, 100);\n                }\n            })\n            .on(\"dragover\" + namespace, function() {\n                lastDrag = new Date();\n            });\n    }\n\n    function isFileUploadStarted(fileEntry) {\n        return fileEntry.is(\".k-file-progress, .k-file-success, .k-file-error:not(.k-file-invalid)\");\n    }\n\n    function getFileEntry(e) {\n        return $(e.target).closest(\".k-file\");\n    }\n\n    kendo.ui.plugin(Upload);\n})(window.kendo.jQuery);\n"]}