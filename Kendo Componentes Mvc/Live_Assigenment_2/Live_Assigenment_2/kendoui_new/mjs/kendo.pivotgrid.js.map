{"version":3,"file":"kendo.pivotgrid.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","o","map","extend","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","key","headerClass","colspan","rowspan","expandable","iconClass","icon","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","call","d","type","normalizeMembers","expand","slice","normalizeName","indexOf","accumulateMembers","accumulator","rootTuple","tuple","level","idx","length","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","push","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","val","isNaN","isDate","getTime","flattenSortDescriptors","i","dir","split","pop","createLocalMeasure","format","measureMap","Sum","Average","Min","Max","item","this","bind","uniqueName","functions","sum","count","average","max","min","PivotCubeBuilder","init","options","dimensions","_normalizeDescriptors","keyField","fields","_rootTuples","rootNames","measureAggregators","root","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","keys","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","index","_expandedTuples","expanded","current","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","join","_asTuples","rootInfo","expandedInfo","concat","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","row","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rows","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","sort","axes","PivotTransport","transport","discover","read","update","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","values","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","that","_data","_query","done","_createSettings","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","_pristineData","distinct","levelUniqueName","childrenCardinality","isPrevented","trigger","params","_params","deferred","Deferred","originalData","reader","columnSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","reverse","_saveState","resolve","newDataState","response","_preventRefresh","error","err","promise","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","target","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","last","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","_handleCustomErrors","status","reject","kpis","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","first","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","r","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","cells","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","element","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","closest","action","attr","hasClass","remove","sortable","sortDirection","currentTarget","find","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","start","change","add","move","newIndex","_isKPI","validate","isMeasure","Array","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","focus","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivot","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","notify","height","columnWidth","_windowResizeHandler","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","offsetWidth","scrollWidth","removeChild","columnsHeader","rowsHeader","scroll","scrollLeft","scrollTop","_wheelScroll","ctrlKey","delta","wheelDeltaY","preventDefault","one","css","_progress","progress","offsetHeight","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","support","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","setTimeout","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","cell","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","x","y","htmlNode","createMetadata","maxMembers","addColElements","table","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","rowSpan","colSpan","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","rowHeaderRows","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","workbook","sheets","freezePane","PivotExcelMixin","proto","excel","saveAsExcel","proxyURL","fileName","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","jQuery"],"sources":["kendo.pivotgrid.js"],"mappings":"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","sourcesContent":["import './kendo.pivot.common.js';\nimport './kendo.dom.js';\nimport './kendo.data.js';\nimport './kendo.icons.js';\n\nvar __meta__ = {\n    id: \"pivotgrid\",\n    name: \"PivotGrid\",\n    category: \"web\",\n    description: \"The PivotGrid widget is a data summarization tool.\",\n    depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\", \"icons\" ],\n    features: [{\n        id: \"pivotgrid-configurator\",\n        name: \"Configurator\",\n        description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n        depends: [ \"pivot.configurator\" ]\n    }, {\n        id: \"pivotgrid-filtering\",\n        name: \"Filtering\",\n        description: \"Support for filtering\",\n        depends: [ \"pivot.fieldmenu\" ]\n    }, {\n        id: \"pivotgrid-excel-export\",\n        name: \"Excel export\",\n        description: \"Export pivot grid data as Excel spreadsheet\",\n        depends: [ \"ooxml\" ]\n    }, {\n        id: \"pivotgrid-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export pivot grid data as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Class = kendo.Class,\n        Comparer = kendo.data.Comparer,\n        Widget = ui.Widget,\n        DataSource = kendo.data.DataSource,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        normalizeFilter = kendo.data.Query.normalizeFilter,\n        normalizeSort = kendo.data.Query.normalizeSort,\n        toString = {}.toString,\n        identity = function(o) { return o; },\n        map = $.map,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        fetchData = common.fetchData,\n        createLocalDataState = common.createLocalDataState,\n        createDataTree = common.createDataTree,\n        sumAggregate = common.sumAggregate,\n        averageAggregate = common.averageAggregate,\n        minAggregate = common.minAggregate,\n        maxAggregate = common.maxAggregate,\n        createDataState = common.createDataState,\n        toColumns = common.toColumns,\n        toRows = common.toRows,\n        toTree = common.toTree,\n        toData = common.toData,\n        headersReducer = common.headersReducer,\n        RESIZE = \"resize\",\n        READ = \"read\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        MEASURES = \"Measures\",\n        STATERESET = \"stateReset\",\n        AUTO = \"auto\",\n        DIV = \"<div></div>\",\n        NS = \".kendoPivotGrid\",\n        ROW_TOTAL_KEY = \"__row_total__\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        EXPANDMEMBER = \"expandMember\",\n        HEADERTEMPLATE = ({ key, headerClass, colspan, rowspan, expandable, iconClass }) => `<th data-key=\"${encode(key)}\" class=\"k-table-th ${encode(headerClass)}\" ${colspan ? 'colspan=\"' + encode(colspan) + '\"' : ''} ${rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : ''}>` +\n                                    `${expandable ? kendo.ui.icon($('<span role=\"presentation\"></span>'), { icon: `chevron-${encode(iconClass)}` }) : ''}` +\n                                '</th>',\n        COLLAPSEMEMBER = \"collapseMember\",\n        STATE_EXPANDED = \"k-i-caret-alt-down\",\n        STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n        STATE_EXPANDED_SELECTOR = `.k-i-${STATE_EXPANDED_ICONNAME},.k-svg-i-${STATE_EXPANDED_ICONNAME}`,\n        STATE_COLLAPSED = \"k-i-caret-alt-right\",\n        STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n        STATE_COLLAPSED_SELECTOR = `.k-i-${STATE_COLLAPSED_ICONNAME},.k-svg-i-${STATE_COLLAPSED_ICONNAME}`,\n        HEADER_TEMPLATE = ({ member }) => `<span>${encode(member.caption || member.name)}</span>`,\n        PIVOTGRID_TREND_ICONS_MAP = {\n            \"kpi-trend-decrease\": \"caret-alt-down\",\n            \"kpi-trend-increase\": \"caret-alt-up\",\n            \"kpi-trend-equal\": \"minus\",\n        },\n        KPISTATUS_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: `kpi-status-${dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\"}` }),\n        KPITREND_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: PIVOTGRID_TREND_ICONS_MAP[`kpi-trend-${dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"}`] }),\n        DATACELL_TEMPLATE = ({ dataItem }) => `${dataItem ? encode(dataItem.fmtValue || dataItem.value) || \"&nbsp;\" : \"&nbsp;\"}`,\n        LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-rowheaders\"></div>' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-table\"></div>' +\n                                '</td>' +\n                            '</tr>' +\n                        '</table>';\n        var AXIS_ROWS = \"rows\";\n        var AXIS_COLUMNS = \"columns\";\n\n        var tableStyles = {\n            tableRow: \"k-table-row\",\n            header: \"k-header k-table-th\",\n            headerTable: \"k-grid-header-table k-table k-table-md\",\n            table: \"k-table k-table-md\",\n            contentTable: \"k-grid-table k-table k-table-md\",\n            tbody: \"k-table-tbody\",\n            tableCell: \"k-table-td\"\n        };\n\n    function normalizeMeasures(measure) {\n        var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: d };\n            }\n            return $.extend(true, d, { name: d.name, type: d.type });\n        });\n    }\n\n    function normalizeMembers(member) {\n        var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: [d], expand: false };\n            }\n            return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n        });\n    }\n\n    function normalizeName(name) {\n        if (name.indexOf(\" \") !== -1) {\n            name = '[\"' + name + '\"]';\n        }\n\n        return name;\n    }\n\n    function accumulateMembers(accumulator, rootTuple, tuple, level) {\n        var idx, length;\n        var children;\n        var member;\n\n        if (!tuple) {\n            tuple = rootTuple;\n        }\n\n        if (!level) {\n            level = 0;\n        }\n\n        member = tuple.members[level];\n\n        if (!member || member.measure) { //return if no member or measure\n            return;\n        }\n\n        children = member.children;\n        length = children.length;\n\n        if (tuple === rootTuple) {\n            accumulator[kendo.stringify([member.name])] = !!length;\n        } else if (length) {\n            accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n        }\n\n        if (length) {\n            for (idx = 0; idx < length; idx++) {\n                accumulateMembers(accumulator, rootTuple, children[idx], level);\n            }\n        }\n\n        accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n    }\n\n    function descriptorsForAxes(tuples) {\n        var result = {};\n\n        if (tuples.length) {\n            accumulateMembers(result, tuples[0]);\n        }\n\n        var descriptors = [];\n        for (var k in result) {\n            descriptors.push({ name: JSON.parse(k), expand: result[k] });\n        }\n\n        return descriptors;\n    }\n\n    function addMissingPathMembers(members, axis) {\n        var tuples = axis.tuples || [];\n        var firstTuple = tuples[0];\n\n        if (firstTuple && members.length < firstTuple.members.length) {\n            var tupleMembers = firstTuple.members;\n\n            for (var idx = 0; idx < tupleMembers.length; idx++) {\n                if (tupleMembers[idx].measure) {\n                    continue;\n                }\n\n                var found = false;\n                for (var j = 0; j < members.length; j++) {\n                    if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                }\n            }\n        }\n    }\n\n    function tupleToDescriptors(tuple) {\n        var result = [];\n        var members = tuple.members;\n\n        for (var idx = 0; idx < members.length; idx++) {\n            if (members[idx].measure) {\n                continue;\n            }\n\n            //make tuple name an array\n            result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n        }\n\n        return result;\n    }\n\n    function descriptorsForMembers(axis, members, measures) {\n        axis = axis || {};\n\n        addMissingPathMembers(members, axis);\n\n        if (measures.length > 1) {\n            members.push({\n                name: MEASURES,\n                measure: true,\n                children: normalizeMembers(measures)\n            });\n        }\n\n        var tupletoSearch = {\n            members: members\n        };\n\n        if (axis.tuples) {\n            var result = findExistingTuple(axis.tuples, tupletoSearch);\n            if (result.tuple) {\n                members = tupleToDescriptors(result.tuple);\n            }\n        }\n\n        return members;\n    }\n\n    function createAggregateGetter(m) {\n        var measureGetter = kendo.getter(m.field, true);\n        return function(aggregatorContext, state) {\n            return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n        };\n    }\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function getScollWidth() {\n        var scrollbar = 0;\n        var div;\n        if (document && document.createElement) {\n            div = document.createElement('div');\n\n            div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n            div.innerHTML = '&nbsp;';\n            document.body.appendChild(div);\n\n            scrollbar = div.offsetWidth - div.scrollWidth;\n\n            document.body.removeChild(div);\n        }\n\n        return scrollbar;\n    }\n\n    function flattenSortDescriptors(descriptors) {\n        var result = [];\n        for (var i = 0; i < descriptors.length; i++) {\n            result.push({\n                dir: descriptors[i].dir,\n                field: descriptors[i].field.split(\".\").pop()\n            });\n        }\n        return result;\n    }\n\n    function createLocalMeasure(field, key, format) {\n        var formatFunc = function(value) { return kendo.format(this.format, value); };\n        var measureMap = {\n            \"Sum\": sumAggregate,\n            \"Average\": averageAggregate,\n            \"Min\": minAggregate,\n            \"Max\": maxAggregate,\n        };\n        var valueFunc = function(item) { return item[this.field]; };\n        var measure = {\n                value: valueFunc.bind({ field: field }),\n                aggregate: measureMap[key],\n                caption: key,\n                uniqueName: key,\n                type: 2,\n                name: [key]\n            };\n        if (format) {\n            measure.aggregate.format = formatFunc.bind({ format: format });\n        }\n\n        return measure;\n    }\n\n    function getIcons(sortIcon, options, pivotOptions) {\n        var sortable = options.sortable,\n            filterable = options.filterable,\n            reorderable = pivotOptions.reorderable,\n            result = \"\";\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n        if (reorderable) {\n            result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n        }\n\n        return result;\n    }\n\n    var functions = {\n        sum: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(value, state) {\n            return (state.accumulator || 0) + 1;\n        },\n        average: {\n            aggregate: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (state.count === undefined$1) {\n                    state.count = 0;\n                }\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                if (isNumber(value)) {\n                    state.count++;\n                }\n\n                return accumulator;\n            },\n            result: function(state) {\n                var accumulator = state.accumulator;\n\n                if (isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n\n                return accumulator;\n            }\n        },\n        max: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    var PivotCubeBuilder = Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n            this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n        },\n\n        _normalizeDescriptors: function(keyField, descriptors) {\n            descriptors = descriptors || {};\n            var fields = {};\n            var field;\n\n            if (toString.call(descriptors) === \"[object Array]\") {\n                for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                    field = descriptors[idx];\n                    if (typeof field === \"string\") {\n                        fields[field] = {};\n                    } else if (field[keyField]) {\n                        fields[field[keyField]] = field;\n                    }\n                }\n                descriptors = fields;\n            }\n\n            return descriptors;\n        },\n\n        _rootTuples: function(rootNames, measureAggregators) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var root, name, parts;\n            var measureIdx = 0;\n            var idx;\n\n            var rootNamesLength = rootNames.length;\n            var result = [];\n            var keys = [];\n\n            if (rootNamesLength || measureAggregators.length) {\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                    root = { members: [] };\n\n                    for (idx = 0; idx < rootNamesLength; idx++) {\n                        name = rootNames[idx];\n                        parts = name.split(\"&\");\n\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                            name: name,\n                            levelName: name,\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: parts.length > 1 ? parts[0] : undefined$1,\n                            hierarchy: name\n                        };\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (measureAggregators[measureIdx]).caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: false,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    result[result.length] = root;\n                }\n\n                keys.push(ROW_TOTAL_KEY);\n            }\n\n            return {\n                keys: keys,\n                tuples: result\n            };\n        },\n\n        _sortMap: function(map, sortDescriptors) {\n            var sortedMaps = [];\n            var sortTree = [];\n            var flattenTree = [];\n            var mapItem;\n            var key;\n\n            for (key in map) {\n                if (!map[key].directParentName) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            //if there are no root this means that something is expanding\n            //and we should only sort that part of the tree\n            if (!sortTree.length) {\n                for (key in map) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            fillSortTree(sortTree, map);\n\n            // fill tree recursive\n            for (var i = 0; i < sortDescriptors.length; i++) {\n                sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n            }\n\n            flattenTree = flatColumns(sortTree);\n\n            //we need to flatten the structure so the tuples can build correctly\n            for (var j = 0; j < flattenTree.length; j++) {\n                mapItem = map[flattenTree[j].name];\n                mapItem.index = j;\n                sortedMaps[j] = mapItem;\n            }\n\n            return sortedMaps;\n        },\n\n        _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var measureIdx;\n            var tuple;\n\n            var key;\n            var mapItem;\n            var current;\n            var currentKeys;\n            var accumulator = [];\n            var accumulatorKeys = [];\n            var memberInfo;\n\n            var expandedNames;\n            var parts;\n            var name;\n            var idx;\n\n            if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                map = this._sortMap(map, sortDescriptors);\n            }\n\n            for (key in map) {\n                mapItem = map[key];\n                memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                current = accumulator[memberInfo.index] || [];\n                currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                expandedNames = memberInfo.member.names;\n\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                    tuple = { members: [] };\n                    for (idx = 0; idx < expandedNames.length; idx++) {\n                        if (idx === memberInfo.member.expandedIdx) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: mapItem.value,\n                                name: mapItem.name,\n                                hasChildren: false,\n                                levelNum: 1,\n                                levelName: mapItem.parentName + mapItem.name,\n                                parentName: mapItem.parentName,\n                                hierarchy: mapItem.parentName + mapItem.name\n                            };\n\n                            if (measureIdx === 0) {\n                                currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                            }\n                        } else {\n                            name = expandedNames[idx];\n                            parts = name.split(\"&\");\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        tuple.members[tuple.members.length] = {\n                            children: [],\n                            caption: measureAggregators[measureIdx].caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    current[current.length] = tuple;\n                }\n\n                accumulator[memberInfo.index] = current;\n                accumulatorKeys[memberInfo.index] = currentKeys;\n            }\n\n            return {\n                keys: accumulatorKeys,\n                tuples: accumulator\n            };\n        },\n\n        _findExpandedMember: function(members, parentName) {\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].uniquePath === parentName) {\n                    return {\n                        member: members[idx],\n                        index: idx\n                    };\n                }\n            }\n        },\n\n        _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n            measureAggregators = measureAggregators || [];\n\n            var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n            var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n            return {\n                keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n            };\n        },\n\n        _measuresInfo: function(measures, rowAxis) {\n            var idx = 0;\n            var length = measures && measures.length;\n\n            var aggregateNames = [];\n            var resultFuncs = {};\n            var formats = {};\n\n            var descriptors = (this.measures || {});\n            var measure;\n            var name;\n\n            for (; idx < length; idx++) {\n                name = measures[idx].descriptor.name;\n                measure = descriptors[name] || {};\n\n                aggregateNames.push(name);\n\n                if (measure.result) {\n                    resultFuncs[name] = measure.result;\n                }\n\n                if (measure.format) {\n                    formats[name] = measure.format;\n                }\n            }\n\n            return {\n                names: aggregateNames,\n                formats: formats,\n                resultFuncs: resultFuncs,\n                rowAxis: rowAxis\n            };\n        },\n\n        _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n            var result = [];\n\n            var aggregates;\n            var name, i, j, k, n;\n            var row, column, columnKey;\n\n            var rowMeasureNamesLength = 1;\n            var rowMeasureNames = [];\n            var columnMeasureNames;\n\n            var rowLength = rowKeys.length || 1;\n            var columnLength = columnKeys.length || 1;\n\n            if (measuresInfo.rowAxis) {\n                rowMeasureNames = measuresInfo.names;\n                rowMeasureNamesLength = rowMeasureNames.length;\n            } else {\n                columnMeasureNames = measuresInfo.names;\n            }\n\n            for (i = 0; i < rowLength; i++) {\n                row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                for (n = 0; n < rowMeasureNamesLength; n++) {\n                    if (measuresInfo.rowAxis) {\n                        columnMeasureNames = [rowMeasureNames[n]];\n                    }\n\n                    for (j = 0; j < columnLength; j++) {\n                        columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                        column = row.items[columnKey];\n\n                        if (columnKey === ROW_TOTAL_KEY) {\n                            aggregates = row.aggregates;\n                        } else {\n                            aggregates = column ? column.aggregates : {};\n                        }\n\n                        for (k = 0; k < columnMeasureNames.length; k++) {\n                            name = columnMeasureNames[k];\n                            this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _addData: function(result, value, format, resultFunc) {\n            var fmtValue = \"\";\n            var ordinal;\n\n            if (value) {\n                value = resultFunc ? resultFunc(value) : value.accumulator;\n                fmtValue = format ? kendo.format(format, value) : value;\n            }\n\n            ordinal = result.length;\n\n            result[ordinal] = {\n                ordinal: ordinal,\n                value: value || \"\",\n                fmtValue: fmtValue\n            };\n        },\n\n        _matchDescriptors: function(dataItem, descriptor, getters) {\n            var parts;\n            var parentField;\n            var expectedValue;\n\n            var names = descriptor.names;\n            var idx = descriptor.expandedIdx;\n            var value;\n\n            while (idx > 0) {\n                parts = names[--idx].split(\"&\");\n                if (parts.length > 1) {\n                    parentField = parts[0];\n                    expectedValue = parts[1];\n\n                    value = getters[parentField](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    if (value != expectedValue) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n            var result = {};\n            var state;\n            var name;\n\n            for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                name = measureAggregators[measureIdx].descriptor.name;\n                state = totalItem.aggregates[name] || { };\n                state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                result[name] = state;\n            }\n\n            return result;\n        },\n\n        _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n            var value;\n            var descriptor;\n            var column;\n            var totalItem;\n            var key, name, parentName, path;\n            var dataItem = aggregatorContext.dataItem;\n            var idx = 0;\n\n            for (; idx < descriptors.length; idx++) {\n                descriptor = descriptors[idx];\n\n                //checks whether the dataItem is relevant to the descriptors\n                if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                    continue;\n                }\n\n                path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                name = descriptor.names[descriptor.expandedIdx];\n\n\n                value = getters[name](dataItem);\n                value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                parentName = name;\n                name = name + \"&\" + value;\n                key = path + name;\n\n                column = columns[key] || {\n                    index: state.columnIndex,\n                    parentName: parentName,\n                    name: name,\n                    directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                    uniquePath: path + parentName,\n                    childrenMap: {},\n                    value: value\n                };\n\n                if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                    columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                }\n\n                totalItem = rowTotal.items[key] || {\n                    aggregates: {}\n                };\n\n                rowTotal.items[key] = {\n                    index: column.index,\n                    aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                };\n\n                if (updateColumn) {\n                    if (!columns[key]) {\n                        state.columnIndex++;\n                    }\n                    columns[key] = column;\n                }\n            }\n        },\n\n        _measureAggregators: function(options) {\n            var measureDescriptors = options.measures || [];\n            var measures = this.measures || {};\n            var aggregators = [];\n            var descriptor, measure, idx, length;\n            var defaultAggregate, aggregate;\n\n            if (measureDescriptors.length) {\n                for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                    descriptor = measureDescriptors[idx];\n                    measure = measures[descriptor.name];\n                    defaultAggregate = null;\n\n                    if (measure) {\n                        aggregate = measure.aggregate;\n                        if (typeof aggregate === \"string\") {\n                            defaultAggregate = functions[aggregate.toLowerCase()];\n\n                            if (!defaultAggregate) {\n                                throw new Error(\"There is no such aggregate function\");\n                            }\n\n                            measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                            measure.result = defaultAggregate.result;\n                        }\n\n\n                        aggregators.push({\n                            descriptor: descriptor,\n                            caption: measure.caption,\n                            result: measure.result,\n                            aggregator: createAggregateGetter(measure)\n                        });\n                    }\n                }\n            } else {\n                aggregators.push({\n                    descriptor: { name: \"default\" },\n                    caption: \"default\",\n                    aggregator: function() { return 1; }\n                });\n            }\n\n            return aggregators;\n        },\n\n        _buildGetters: function(names) {\n            var result = {};\n            var parts;\n            var name;\n\n            for (var idx = 0; idx < names.length; idx++) {\n                name = names[idx];\n                parts = name.split(\"&\");\n\n                if (parts.length > 1) {\n                    result[parts[0]] = kendo.getter(parts[0], true);\n                } else {\n                    result[name] = kendo.getter(normalizeName(name), true);\n                }\n            }\n\n            return result;\n        },\n\n        _parseDescriptors: function(descriptors) {\n            var parsedDescriptors = parseDescriptors(descriptors);\n            var rootNames = getRootNames(parsedDescriptors.root);\n            var expanded = parsedDescriptors.expanded;\n            var result = [];\n\n            for (var idx = 0; idx < expanded.length; idx++) {\n                result.push(mapNames(expanded[idx].name, rootNames));\n            }\n\n            return {\n                root: rootNames,\n                expanded: result\n            };\n        },\n\n        _filter: function(data, filter) {\n            if (!filter) {\n                return data;\n            }\n\n            var expr;\n            var idx = 0;\n            var filters = filter.filters;\n\n            for (; idx < filters.length; idx++) {\n                expr = filters[idx];\n\n                if (expr.operator === \"in\") {\n                    filters[idx] = this._normalizeFilter(expr);\n                }\n            }\n\n            return new kendo.data.Query(data).filter(filter).data;\n        },\n\n        _normalizeFilter: function(filter) {\n            var value = filter.value.split(\",\");\n            var result = [];\n\n            if (!value.length) {\n                return value;\n            }\n\n            for (var idx = 0; idx < value.length; idx++) {\n                result.push({\n                    field: filter.field,\n                    operator: \"eq\",\n                    value: value[idx]\n                });\n            }\n\n            return {\n                logic: \"or\",\n                filters: result\n            };\n        },\n\n        process: function(data, options) {\n            data = data || [];\n            options = options || {};\n\n            data = this._filter(data, options.filter);\n\n            var measures = options.measures || [];\n\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n\n            var columnDescriptors = options.columns || [];\n            var rowDescriptors = options.rows || [];\n\n            if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columnDescriptors = rowDescriptors;\n                rowDescriptors = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length) {\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && measures.length) {\n                columnDescriptors = normalizeMembers(options.measures);\n            }\n\n            columnDescriptors = this._parseDescriptors(columnDescriptors);\n            rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n            var aggregatedData = {};\n            var columns = {};\n            var rows = {};\n\n            var rowValue;\n            var state = { columnIndex: 0 };\n\n            var measureAggregators = this._measureAggregators(options);\n\n            var columnGetters = this._buildGetters(columnDescriptors.root);\n            var rowGetters = this._buildGetters(rowDescriptors.root);\n\n            var processed = false;\n\n            var expandedColumns = columnDescriptors.expanded;\n            var expandedRows = rowDescriptors.expanded;\n\n            var dataItem;\n            var aggregatorContext;\n            var hasExpandedRows = expandedRows.length !== 0;\n\n            var rowIdx, rowDescriptor, rowName, rowTotal;\n            var key, path, parentName, value;\n            var columnsInfo, rowsInfo;\n            var length = data.length;\n            var idx = 0;\n\n            if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                processed = true;\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n\n                    aggregatorContext = {\n                        dataItem: dataItem,\n                        index: idx\n                    };\n\n                    rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                        items: {},\n                        aggregates: {}\n                    };\n\n                    this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                    rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                    aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                    for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                        rowDescriptor = expandedRows[rowIdx];\n\n                        if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                            continue;\n                        }\n\n                        path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                        rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                        parentName = rowName;\n\n                        rowValue = rowGetters[rowName](dataItem);\n                        rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                        rowName = rowName + \"&\" + rowValue;\n                        key = path + rowName;\n\n                        rows[key] = {\n                            uniquePath: path + parentName,\n                            parentName: parentName,\n                            name: rowName,\n                            value: rowValue\n                        };\n\n                        value = aggregatedData[key] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                        value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                        aggregatedData[key] = value;\n                    }\n                }\n            }\n\n            if (processed && length) {\n                if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                    columnDescriptors = {\n                        root: [],\n                        expanded: []\n                    };\n                }\n\n                columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                columns = columnsInfo.tuples;\n                rows = rowsInfo.tuples;\n\n                aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n            } else {\n                aggregatedData = columns = rows = [];\n            }\n\n            return {\n                axes: {\n                    columns: { tuples: columns },\n                    rows: { tuples: rows }\n                },\n                data: aggregatedData\n            };\n        }\n    });\n\n    var PivotTransport = Class.extend({\n        init: function(options, transport) {\n            this.transport = transport;\n            this.options = transport.options || {};\n\n            if (!this.transport.discover) {\n                if (isFunction(options.discover)) {\n                    this.discover = options.discover;\n                }\n            }\n        },\n        read: function(options) {\n            return this.transport.read(options);\n        },\n        update: function(options) {\n            return this.transport.update(options);\n        },\n        create: function(options) {\n            return this.transport.create(options);\n        },\n        destroy: function(options) {\n            return this.transport.destroy(options);\n        },\n        discover: function(options) {\n            if (this.transport.discover) {\n                return this.transport.discover(options);\n            }\n            options.success({});\n        },\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        }\n    });\n\n    var PivotDataSourceV2 = DataSource.extend({\n        init: function(options) {\n\n            var cube = ((options || {}).schema || {}).cube;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                //schema: schema\n            }, options));\n\n            var transportOptions = this.options.transport || {};\n            if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                this._online = true;\n                this.transport = new XmlaTransportV2(transportOptions);\n            }\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                this._measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        axes: function() {\n            return {\n                columns: normalizeAxis(this.columns()),\n                rows: normalizeAxis(this.rows())\n            };\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            if (this._data === undefined$1 || this._data.length === 0) {\n                var fn = function() {\n                    if (isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n\n                return this._query().done(fn);\n            }\n        },\n\n        _createSettings: function(axes) {\n            var settings = [];\n            var key;\n            var dimensions = this.cubeSchema.dimensionsSettings();\n            var displayValueFunc = function(item) { return item[this.key]; };\n            var sortValueFunc = function(value) { return value; };\n            for (var i = 0; i < axes.length; i++) {\n                key = axes[i].name[0];\n                settings.push({\n                    key: key,\n                    displayValue: displayValueFunc.bind({ key: key }),\n                    sortValue: sortValueFunc,\n                    caption: (dimensions[key] || {}).caption || key\n                });\n            }\n            return settings;\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensionsSettings: function() {\n                    return cube.dimensions;\n                },\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                restoreMeasure: function(measures, measure) {\n                    for (var i = 0; i < measures.length; i++) {\n                        if (!measures[i].aggregate) {\n                            measures[i].aggregate = measure.aggregate;\n                            measures[i].value = measure.value;\n                            measures[i].caption = measure.caption;\n                            measures[i].uniqueName = measure.uniqueName;\n                            measures[i].type = 2;\n                        }\n                    }\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push(createLocalMeasure(measures[key].field, key, measures[key].format));\n                    }\n\n                    return result;\n                },\n                memberType: function(name) {\n                    var getter = kendo.getter(normalizeName(name), true);\n                    var data = this.options.data || this._pristineData || [];\n                    if (!data.length) {\n                        return null;\n                    }\n\n                    return typeof getter(data[0]);\n                }.bind(this),\n                members: function(name) {\n                    var data = this.options.data || this._pristineData || [];\n                    var result = [];\n                    var distinct = {};\n                    var getter;\n                    var value;\n                    var idx = 0;\n\n                    if (name.indexOf(\"[(ALL)]\") !== -1) {\n                        return [\n                            {\n                                caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                levelUniqueName: name,\n                                name: name,\n                                childrenCardinality: 1,\n                                uniqueName: name\n                            }\n                        ];\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0 || value === false) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value + \"\",\n                                name: value + \"\",\n                                childrenCardinality: 0,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        read: function(data) {\n            var that = this;\n            var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n            var params = that._params(data);\n            var deferred = $.Deferred();\n            if (!isPrevented) {\n                that.trigger(PROGRESS);\n\n                if (that.options.data) {\n\n                    var originalData = (this.reader.data(this.options.data) || []).slice(0);\n                    if (originalData && !this._pristineData) {\n                        this._pristineData = originalData;\n                    }\n                    var columnSettings = that._createSettings(params.columnAxes);\n                    var rowSettings = that._createSettings(params.rowAxes);\n                    var measures = that.measures();\n                    var dataTree = createDataTree(that.options.data, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n                    var stateArgs = {\n                        dataTree: dataTree,\n                        columnSettings: columnSettings,\n                        rowSettings: rowSettings,\n                        columnAxes: params.columnAxes,\n                        rowAxes: params.rowAxes,\n                        measures: measures.map(function(item) { return item; }).reverse(),\n                        fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                        sort: flattenSortDescriptors(params.sort || [])\n                    };\n\n                    that._saveState(createLocalDataState(stateArgs));\n                    that.trigger(CHANGE);\n                    deferred.resolve();\n                } else {\n                    that.transport.read({\n                        data: params,\n                        success: function(newDataState) {\n                            that._saveState(newDataState);\n                            that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                            that.trigger(CHANGE);\n                            if (that._preventRefresh) {\n                                that._preventRefresh = false;\n                            }\n                            deferred.resolve();\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                }\n            }\n            return deferred.promise();\n        },\n\n        _params: function(data) {\n            var that = this;\n            var options = DataSource.fn._params.call(that, data);\n\n            options = extend({\n                columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                measuresAxis: that.measuresAxis(),\n                measureAxes: that._measures\n            }, options);\n\n            if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                options.connection = that.options.transport.connection;\n            }\n\n            if (options.filter) {\n                options.filter = normalizeFilter(options.filter);\n                options.filter = (options.filter || {}).filters;\n            }\n\n            if (options.sort) {\n                options.sort = normalizeSort(options.sort);\n            }\n\n            return options;\n        },\n\n        discover: function(options) {\n            var that = this,\n                transport = that.transport;\n\n            if (transport.discover) {\n                return transport.discover(options);\n            }\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n            return that.discover(\n                {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaKPIs\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaDimensions\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n               command: \"schemaHierarchies\",\n               restrictions: {\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube(),\n                   dimensionUniqueName: dimensionName\n               }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaLevels\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    hierarchyUniqueName: hierarchyName\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCubes\",\n                restrictions: {\n                    catalogName: that.transport.catalog()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCatalogs\"\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaMembers\",\n                restrictions: extend({\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube()\n                }, restrictions)\n            }, function(response) {\n                return response;\n            });\n        },\n\n        _saveState: function(state) {\n            var that = this;\n\n            that._columnTuples = state.columns;\n            that._rowTuples = state.rows;\n            that._view = that._data = state.data;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._columns = normalizeMembers(val);\n            this.read();\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._rows = normalizeMembers(val);\n\n            this.read();\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._measures = normalizeMeasures(val);\n\n            this.read();\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            return options;\n        },\n\n        _query: function(options) {\n            var that = this;\n            var params = extend({}, {\n                sort: that.sort(),\n                measuresAxis: that.measuresAxis(),\n                filter: that.filter()\n            }, options);\n            this._mergeState(params);\n\n            return this.read();\n        },\n    });\n\n    var PivotDataSource = DataSource.extend({\n        init: function(options) {\n            var cube = ((options || {}).schema || {}).cube;\n            var measuresAxis = \"columns\";\n            var measures;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                schema = $.extend(schema, this._cubeSchema(cube));\n                this.cubeBuilder = new PivotCubeBuilder(cube);\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: schema\n            }, options));\n\n            this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n            this._measuresAxis = measuresAxis;\n\n            this._skipNormalize = 0;\n            this._axes = {};\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                hierarchies: function() {\n                    return [];\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push({\n                            name: key,\n                            caption: key,\n                            uniqueName: key,\n                            aggregator: key\n                        });\n                    }\n\n                    return result;\n                },\n                members: function(response, restrictions) {\n                    var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                    var schemaData = this.options.schema.data;\n                    var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                    var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                    var result = [];\n                    var getter;\n                    var value;\n                    var idx = 0;\n                    var distinct = {};\n\n                    if (name) {\n                        name = name.split(\".\")[0];\n                    }\n\n                    if (!restrictions.treeOp) {\n                        result.push({\n                            caption: cube.dimensions[name].caption || name,\n                            childrenCardinality: \"1\",\n                            dimensionUniqueName: name,\n                            hierarchyUniqueName: name,\n                            levelUniqueName: name,\n                            name: name,\n                            uniqueName: name\n                        });\n\n                        return result;\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value,\n                                childrenCardinality: \"0\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: value,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this._axes = {};\n            this.data([]);\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._axes = {};\n            this._mergeState({});// clears current state\n            this.data([]);\n        },\n\n        axes: function() {\n            return this._axes;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._columns = normalizeMembers(val);\n            this.query({\n                columns: val,\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._rows = normalizeMembers(val);\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: val,\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: normalizeMeasures(val),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        _expandPath: function(path, axis) {\n            var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n            var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n            var members = normalizeMembers(path);\n            var memberToExpand = getName(members[members.length - 1]);\n\n            this._lastExpanded = origin;\n\n            members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n            for (var idx = 0; idx < members.length; idx++) {\n                var memberName = getName(members[idx]);\n\n                if (memberName === memberToExpand) {\n                    if (members[idx].expand) {\n                        return;\n                    }\n                    members[idx].expand = true;\n                } else {\n                    members[idx].expand = false;\n                }\n            }\n\n            var descriptors = {};\n            descriptors[origin] = members;\n            descriptors[other] = this._descriptorsForAxis(other);\n\n            this._query(descriptors);\n        },\n\n        _descriptorsForAxis: function(axis) {\n            var axes = this.axes();\n            var descriptors = this[axis]() || [];\n\n            if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                descriptors = descriptorsForAxes(axes[axis].tuples || []);\n            }\n            return descriptors;\n        },\n\n        columnsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"columns\");\n        },\n\n        rowsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"rows\");\n        },\n\n        _process: function(data, e) {\n            this._view = data;\n\n            e = e || {};\n            e.items = e.items || this._view;\n\n            this.trigger(CHANGE, e);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            if (!options) {\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n            }\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate(),\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures()\n            }, options));\n        },\n\n        query: function(options) {\n            var state = this._mergeState(options);\n\n            if (this._data.length && this.cubeBuilder) {\n                this._params(state);\n                this._updateLocalData(this._pristineData);\n\n                return $.Deferred().resolve().promise();\n            }\n\n            return this.read(state);\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            if (options !== undefined$1) {\n                this._measures = normalizeMeasures(options.measures);\n\n                if (options.columns) {\n                    options.columns = normalizeMembers(options.columns);\n                } else if (!options.columns) {\n                    this._columns = [];\n                }\n\n                if (options.rows) {\n                    options.rows = normalizeMembers(options.rows);\n                } else if (!options.rows) {\n                    this._rows = [];\n                }\n            }\n            return options;\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                return this._filter;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n            this._query({ filter: val, page: 1 });\n        },\n\n        expandColumn: function(path) {\n            this._expandPath(path, \"columns\");\n        },\n\n        expandRow: function(path) {\n            this._expandPath(path, \"rows\");\n        },\n\n        success: function(data) {\n            var originalData;\n            if (this.cubeBuilder) {\n                originalData = (this.reader.data(data) || []).slice(0);\n            }\n            DataSource.fn.success.call(this, data);\n            if (originalData) {\n                this._pristineData = originalData;\n            }\n        },\n\n        _processResult: function(data, axes) {\n            if (this.cubeBuilder) {\n                var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                data = processedData.data;\n                axes = processedData.axes;\n            }\n\n            var columnIndexes, rowIndexes;\n            var tuples, resultAxis, measures, axisToSkip;\n            var columnDescriptors = this.columns();\n            var rowDescriptors = this.rows();\n            var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n            if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            this._axes = {\n                columns: normalizeAxis(this._axes.columns),\n                rows: normalizeAxis(this._axes.rows)\n            };\n\n            axes = {\n                columns: normalizeAxis(axes.columns),\n                rows: normalizeAxis(axes.rows)\n            };\n\n            columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n            rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n            if (this._skipNormalize > 0) {\n                this._skipNormalize -= 1;\n            }\n\n            if (!this.cubeBuilder) {\n                data = this._normalizeData({\n                    columnsLength: axes.columns.tuples.length,\n                    rowsLength: axes.rows.tuples.length,\n                    columnIndexes: columnIndexes,\n                    rowIndexes: rowIndexes,\n                    data: data\n                });\n            }\n\n            if (this._lastExpanded == \"rows\") {\n                tuples = axes.columns.tuples;\n                measures = this._columnMeasures();\n                resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"columns\";\n                    axes.columns = resultAxis;\n                    adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.columns.tuples, measures),\n                            rowsLength: axes.rows.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            } else if (this._lastExpanded == \"columns\") {\n                tuples = axes.rows.tuples;\n                measures = this._rowMeasures();\n                resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"rows\";\n                    axes.rows = resultAxis;\n                    adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.rows.tuples, measures),\n                            rowsLength: axes.columns.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            }\n\n            this._lastExpanded = null;\n\n            var result = this._mergeAxes(axes, data, axisToSkip);\n            this._axes = result.axes;\n\n            return result.data;\n        },\n\n        _readData: function(data) {\n            var axes = this.reader.axes(data);\n            var newData = this.reader.data(data);\n\n            if (this.cubeBuilder) {\n                this._rawData = newData;\n            }\n\n            return this._processResult(newData, axes);\n        },\n\n        _createTuple: function(tuple, measure, buildRoot) {\n            var members = tuple.members;\n            var length = members.length;\n            var root = { members: [] };\n            var levelName, levelNum;\n            var name, parentName;\n            var hasChildren;\n            var hierarchy;\n            var caption;\n            var member;\n            var idx = 0;\n\n            if (measure) {\n                length -= 1;\n            }\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum);\n\n                name = member.name;\n                parentName = member.parentName;\n                caption = member.caption || name;\n                hasChildren = member.hasChildren;\n                hierarchy = member.hierarchy;\n                levelName = member.levelName;\n\n                if (buildRoot) {\n                    caption = \"All\";\n                    if (levelNum === 0) {\n                        parentName = member.name;\n                    } else {\n                        levelNum -= 1;\n                    }\n\n                    hasChildren = true;\n                    name = hierarchy = levelName = parentName;\n                }\n\n                root.members.push({\n                    name: name,\n                    children: [],\n                    caption: caption,\n                    levelName: levelName,\n                    levelNum: levelNum.toString(),\n                    hasChildren: hasChildren,\n                    hierarchy: hierarchy,\n                    parentName: !buildRoot ? parentName : \"\"\n                });\n            }\n\n            if (measure) {\n                root.members.push({\n                    name: measure.name,\n                    children: []\n                });\n            }\n\n            return root;\n        },\n\n        _hasRoot: function(target, source, descriptors) {\n            if (source.length) {\n                return findExistingTuple(source, target).tuple;\n            }\n\n            var members = target.members;\n            var member;\n            var descriptor;\n\n            var isRoot = true;\n            var levelNum;\n\n            for (var idx = 0, length = members.length; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum) || 0;\n                descriptor = descriptors[idx];\n\n                if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                    isRoot = false;\n                    break;\n                }\n            }\n\n            return isRoot;\n        },\n\n        _mergeAxes: function(sourceAxes, data, axisToSkip) {\n            var columnMeasures = this._columnMeasures();\n            var rowMeasures = this._rowMeasures();\n            var axes = this.axes();\n            var startIndex, tuples;\n\n            var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n            var newRowsLength = sourceAxes.rows.tuples.length;\n\n            var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n            var newColumnsLength = sourceAxes.columns.tuples.length;\n\n            if (axisToSkip == \"columns\") {\n                newColumnsLength = oldColumnsLength;\n                tuples = sourceAxes.columns.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                data = prepareDataOnColumns(tuples, data);\n            }\n\n            var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n            if (axisToSkip == \"rows\") {\n                newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                tuples = sourceAxes.rows.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                data = prepareDataOnRows(tuples, data);\n            }\n            var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n            axes.columns.tuples = mergedColumns.tuples;\n            axes.rows.tuples = mergedRows.tuples;\n\n            if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                //columns are expanded\n                startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                var offset = oldColumnsLength + newColumnsLength;\n                data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n            } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                //rows are expanded\n                startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n            }\n\n            if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                data = [];\n            }\n\n            return {\n                axes: axes,\n                data: data\n            };\n        },\n\n        _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n            var data = this.data().toJSON();\n            var rowIndex, index, drop = 0, toAdd;\n            var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n            rowsLength = Math.max(rowsLength, 1);\n\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                drop = columnMeasures;\n                offset -= columnMeasures;\n            }\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                index = columnIndex + (rowIndex * offset);\n                toAdd = newData.splice(0, columnsLength);\n                toAdd.splice(0, drop);\n                [].splice.apply(data, [index, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n            var data = this.data().toJSON();\n            var idx, dataIndex, toAdd;\n            var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n            columnsLength = Math.max(columnsLength, 1);\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                rowsLength -= rowMeasures;\n                newData.splice(0, columnsLength * rowMeasures);\n            }\n\n            for (idx = 0; idx < rowsLength; idx++) {\n                toAdd = newData.splice(0, columnsLength);\n                dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _columnMeasures: function() {\n            var measures = this.measures();\n            var columnMeasures = [];\n\n            if (this.measuresAxis() === \"columns\") {\n                if (this.columns().length === 0) {\n                    columnMeasures = measures;\n                } else if (measures.length > 1) {\n                    columnMeasures = measures;\n                }\n            }\n\n            return columnMeasures;\n        },\n\n        _rowMeasures: function() {\n            var measures = this.measures();\n            var rowMeasures = [];\n\n            if (this.measuresAxis() === \"rows\") {\n                if (this.rows().length === 0) {\n                    rowMeasures = measures;\n                } else if (measures.length > 1) {\n                    rowMeasures = measures;\n                }\n            }\n\n            return rowMeasures;\n        },\n\n        _updateLocalData: function(data, state) {\n            if (this.cubeBuilder) {\n                if (state) {\n                    this._requestData = state;\n                }\n                data = this._processResult(data);\n            }\n\n            this._data = this._observe(data);\n\n            this._ranges = [];\n            this._addRange(this._data);\n\n            this._total = this._data.length;\n            this._pristineTotal = this._total;\n            this._process(this._data);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                this._pristineData = value.slice(0);\n                this._updateLocalData(value, {\n                        columns: this.columns(),\n                        rows: this.rows(),\n                        measures: this.measures()\n                    });\n            } else {\n                return that._data;\n            }\n        },\n\n        _normalizeTuples: function(tuples, source, descriptors, measures) {\n            var length = measures.length || 1;\n            var idx = 0;\n\n            var roots = [];\n            var indexes = {};\n            var measureIdx = 0;\n            var tuple, memberIdx, last;\n\n            if (!tuples.length) {\n                return;\n            }\n\n            if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                this._skipNormalize = 0;\n                for (; idx < length; idx++) {\n                    roots.push(this._createTuple(tuples[0], measures[idx], true));\n                    indexes[idx] = idx;\n                }\n\n                tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                idx = length;\n            }\n\n            if (measures.length) {\n                last = tuple = tuples[idx];\n                memberIdx = tuple.members.length - 1;\n\n                while (tuple) {\n                    if (measureIdx >= length) {\n                        measureIdx = 0;\n                    }\n\n                    if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                        tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                        indexes[idx] = idx;\n                    }\n\n                    idx += 1;\n                    measureIdx += 1;\n                    tuple = tuples[idx];\n\n                    if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                        for (; measureIdx < length; measureIdx++) {\n                            tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                            indexes[idx] = idx;\n                            idx += 1;\n                        }\n                        tuple = tuples[idx];\n                    }\n                    last = tuple;\n                }\n            }\n\n            return indexes;\n        },\n\n        _addMissingDataItems: function(result, metadata) {\n            while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                    result = addEmptyDataItem(result);\n                }\n            }\n\n            while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                result = addEmptyDataItem(result);\n            }\n\n            return result;\n        },\n\n        _normalizeOrdinals: function(result, dataItem, metadata) {\n            var lastOrdinal = metadata.lastOrdinal;\n\n            if (!dataItem) {\n                return addEmptyDataItem(result);\n            }\n\n            if ((dataItem.ordinal - lastOrdinal) > 1) {\n                lastOrdinal += 1;\n\n                while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                    result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                    lastOrdinal += 1;\n                }\n            }\n\n            dataItem.ordinal = result.length;\n            result[result.length] = dataItem;\n\n            return result;\n        },\n\n        _normalizeData: function(options) {\n            var data = options.data;\n            var dataIdx = 0;\n            var dataItem;\n            var result = [];\n            var lastOrdinal;\n            var length;\n\n            options.lastOrdinal = 0;\n            options.columnIndexes = options.columnIndexes || {};\n            options.rowIndexes = options.rowIndexes || {};\n            options.columnsLength = options.columnsLength || 1;\n            options.rowsLength = options.rowsLength || 1;\n            options.length = options.columnsLength * options.rowsLength;\n            length = options.length;\n\n            if (data.length === length) {\n                return data;\n            }\n\n            while (result.length < length) {\n                dataItem = data[dataIdx++];\n                if (dataItem) {\n                    lastOrdinal = dataItem.ordinal;\n                }\n\n                result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                options.lastOrdinal = lastOrdinal;\n            }\n\n            return result;\n        },\n\n        discover: function(options, converter) {\n            var that = this,\n                transport = that.transport;\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converter) {\n                            response = converter(response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.measures(response);\n            });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.kpis(response);\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.dimensions(response);\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                }\n            }, function(response) {\n                return that.reader.hierarchies(response);\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }\n            }, function(response) {\n                return that.reader.levels(response);\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }\n            }, function(response) {\n                return that.reader.cubes(response);\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCatalogs\"\n                }\n            }, function(response) {\n                return that.reader.catalogs(response);\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n            var success = (function(restrictions) {\n                return function(response) {\n                    return that.reader.members(response, restrictions);\n                };\n            }(restrictions));\n\n            return that.discover({\n                data: {\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                   }, restrictions)\n                }\n            }, success);\n        },\n\n        _params: function(data) {\n            if (this._clearAxesData) {\n                this._axes = {};\n                this._data = this._observe([]);\n                this._clearAxesData = false;\n                this.trigger(STATERESET);\n            }\n\n            var options = DataSource.fn._params.call(this, data);\n\n            options = extend({\n                measures: this.measures(),\n                measuresAxis: this.measuresAxis(),\n                columns: this.columns(),\n                rows: this.rows()\n            }, options);\n\n            if (this.cubeBuilder) {\n                this._requestData = options;\n            }\n\n            return options;\n        }\n    });\n\n    function flatColumns(columns) {\n        var result = [];\n        for (var idx = 0; idx < columns.length; idx++) {\n            result.push(columns[idx]);\n            if (columns[idx].children) {\n                result = result.concat(flatColumns(columns[idx].children));\n            }\n        }\n\n        return result;\n    }\n\n    function sortItemsTree(field, items, sortFunction) {\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].children && items[i].children.length) {\n                sortItemsTree(field, items[i].children, sortFunction);\n            }\n        }\n        if (items[0].parentName != field) {\n            return;\n        }\n        items = items.sort(sortFunction);\n    }\n\n    function fillSortTree(items, map) {\n        for (var i = 0; i < items.length; i++) {\n            var currentItem = map[items[i].name];\n\n            if (!$.isEmptyObject(currentItem.childrenMap)) {\n                items[i].children = [];\n                for (var name in currentItem.childrenMap) {\n                    items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                }\n\n                fillSortTree(items[i].children, map);\n            }\n        }\n    }\n\n    function addEmptyDataItem(result) {\n        result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n        return result;\n    }\n\n    function validateAxis(newAxis, axis, measures) {\n        if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n            return axis;\n        }\n\n        return;\n    }\n\n    function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var columnsLength = sourceTuples.length;\n        var targetColumnsLength = membersCount(targetTuples, measures);\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                dataIdx += columnIdx % measuresLength;\n\n                data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n            }\n        }\n    }\n\n    function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var rowsLength = sourceTuples.length;\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n            dataIdx *= measuresLength;\n            dataIdx += rowIdx % measuresLength;\n\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n            }\n        }\n    }\n\n    function tupleIndex(tuple, collection) {\n        return findExistingTuple(collection, tuple).index;\n    }\n\n    function membersCount(tuples, measures) {\n        if (!tuples.length) {\n            return 0;\n        }\n\n        var queue = tuples.slice();\n        var current = queue.shift();\n        var result = 1;\n\n        while (current) {\n            if (current.members) {\n                [].push.apply(queue, current.members);\n            } else if (current.children) {\n                if (!current.measure) {\n                    result += current.children.length;\n                }\n                [].push.apply(queue, current.children);\n            }\n\n            current = queue.shift();\n        }\n\n        if (measures.length) {\n            result = result * measures.length;\n        }\n\n        return result;\n    }\n\n    function normalizeAxis(axis) {\n        if (!axis) {\n            axis = {\n                tuples: []\n            };\n        }\n\n        if (!axis.tuples) {\n            axis.tuples = [];\n        }\n\n        return axis;\n    }\n\n    function findDataIndex(tuple, memberIndex, measures) {\n        if (!tuple) {\n            return 0;\n        }\n\n        var measuresLength = Math.max(measures.length, 1);\n        var tuples = tuple.members.slice(0, memberIndex);\n        var current = tuples.shift();\n\n        //the initial value is equal to the total number of measures\n        //as the measures member is not extracted from the members of the starting tuple\n        //but should be calculated in the final result\n        var counter = measuresLength;\n\n        while (current) {\n            if (current.name === MEASURES) {\n                //subtract 1 as the measures member has been already counted as a single standard member\n                //but we are interested in the total number of measures instead\n                counter += (measuresLength - 1);\n            } else if (current.children) {\n                //is member\n                [].push.apply(tuples, current.children);\n            } else {\n                //is tuple\n                counter ++;\n                [].push.apply(tuples, current.members);\n            }\n\n            current = tuples.shift();\n        }\n\n        return counter;\n    }\n\n    function mergeTuples(target, source, measures) {\n        if (!source[0]) {\n            return {\n                parsedRoot: null,\n                tuples: target,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var result = findExistingTuple(target, source[0]);\n\n        if (!result.tuple) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var targetMembers = result.tuple.members;\n        var sourceMembers = source[0].members;\n        var memberIndex = -1;\n\n        if (targetMembers.length !== sourceMembers.length) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n            if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                    memberIndex = idx;\n                }\n\n                targetMembers[idx].children = sourceMembers[idx].children;\n            }\n        }\n\n        measures = Math.max(measures.length, 1);\n\n        return {\n            parsedRoot: result.tuple,\n            index: result.index * measures,\n            memberIndex: memberIndex,\n            tuples: target\n        };\n    }\n\n    function equalTuples(first, second) {\n        var equal = true;\n        var idx, length;\n\n        first = first.members;\n        second = second.members;\n\n        for (idx = 0, length = first.length; idx < length; idx++) {\n            if (first[idx].measure || second[idx].measure) {\n                continue;\n            }\n\n            equal = equal && (getName(first[idx]) === getName(second[idx]));\n        }\n\n        return equal;\n    }\n\n    function findExistingTuple(tuples, toFind) {\n        var idx, length, tuple, found, counter = 0;\n        var memberIndex, membersLength, member;\n\n        for (idx = 0, length = tuples.length; idx < length; idx++) {\n            tuple = tuples[idx];\n            if (equalTuples(tuple, toFind)) {\n                return {\n                    tuple: tuple,\n                    index: counter\n                };\n            }\n\n            counter ++;\n\n            for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                member = tuple.members[memberIndex];\n                if (member.measure) {\n                    //counter += member.children.length;\n                    continue;\n                }\n                found = findExistingTuple(member.children, toFind);\n                counter += found.index;\n                if (found.tuple) {\n                    return {\n                        tuple: found.tuple,\n                        index: counter\n                    };\n                }\n            }\n        }\n\n        return {\n            index: counter\n        };\n    }\n\n    function addMembers(members, map) {\n        var member, i, len, path = \"\";\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            path += member.name;\n            if (!map[path]) {\n                map[path] = member;\n            }\n        }\n    }\n\n\n    function findParentMember(tuple, map) {\n        var members = tuple.members;\n        var i, len, member, path = \"\";\n        var parentPath = \"\";\n        var parentMember;\n\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            if (parentMember) {\n                if (map[path + member.name]) {\n                    path += member.name;\n                    parentMember = map[path];\n                    continue;\n                } else if (map[path + member.parentName]) {\n                    return map[path + member.parentName];\n                } else if (map[parentPath + member.parentName]) {\n                    return map[parentPath + member.parentName];\n                } else {\n                    return map[parentPath];\n                }\n            }\n\n            path += member.name;\n            parentMember = map[member.parentName];\n\n            if (!parentMember) {\n                parentMember = map[path];\n                if (!parentMember) {\n                    return null;\n                }\n            }\n\n            if (parentMember) {\n                parentPath += parentMember.name;\n            }\n        }\n\n        return parentMember;\n    }\n\n    function measurePosition(tuple, measures) {\n        if (measures.length === 0) {\n            return -1;\n        }\n\n        var measure = measures[0];\n        var members = tuple.members;\n        for (var idx = 0, len = members.length; idx < len; idx ++) {\n            if (members[idx].name == measure.name) {\n                return idx;\n            }\n        }\n    }\n\n    function normalizeTupleMeasures(tuple, index) {\n        if (index < 0) {\n            return;\n        }\n        var member = {\n            name: MEASURES,\n            measure: true,\n            children: [\n                $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n            ]\n        };\n        tuple.members.splice(index, 1, member);\n        tuple.dataIndex = undefined$1;\n    }\n\n    function parseSource(tuples, measures) {\n        if (tuples.length < 1) {\n            return [];\n        }\n        var result = [];\n        var map = { };\n        var measureIndex = measurePosition(tuples[0], measures);\n\n        for (var i = 0; i < tuples.length; i++) {\n            var tuple = tuples[i];\n\n            //keep the old data index of the tuple\n            tuple.dataIndex = i;\n\n            normalizeTupleMeasures(tuple, measureIndex);\n            var parentMember = findParentMember(tuple, map);\n\n            if (parentMember) {\n                if (measureIndex < 0 || !parentMember.measure) {\n                    parentMember.children.push(tuple);\n                } else {\n                    parentMember.children.push(tuple.members[measureIndex].children[0]);\n                }\n            } else {\n                result.push(tuple);\n            }\n\n            addMembers(tuple.members, map);\n        }\n\n        return result;\n    }\n\n    function prepareDataOnRows(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var rowsLength = indices.length;\n        var columnsLength = Math.max(data.length / rowsLength, 1);\n        var rowIndex, columnIndex, targetIndex, sourceIndex;\n        var calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            targetIndex = columnsLength * rowIndex;\n            sourceIndex = columnsLength * indices[rowIndex];\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function prepareDataOnColumns(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var columnsLength = indices.length;\n        var rowsLength = Math.max(data.length / columnsLength, 1);\n        var columnIndex, rowIndex, dataIndex, calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            dataIndex = columnsLength * rowIndex;\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = indices[columnIndex] + dataIndex;\n                result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function buildDataIndices(tuples) {\n        tuples = tuples.slice();\n        var result = [];\n        var tuple = tuples.shift();\n        var idx, length, spliceIndex, children, member;\n\n        while (tuple) {\n            //required for multiple measures\n            if (tuple.dataIndex !== undefined$1) {\n                result.push(tuple.dataIndex);\n            }\n\n            spliceIndex = 0;\n            for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                member = tuple.members[idx];\n                children = member.children;\n                if (member.measure) {\n                    [].splice.apply(tuples, [0, 0].concat(children));\n                } else {\n                    [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                }\n                spliceIndex += children.length;\n            }\n\n            tuple = tuples.shift();\n        }\n\n        return result;\n    }\n\n    PivotDataSourceV2.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n    };\n\n    PivotDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n    };\n\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor;\n\n        sortDescriptor = sortDescriptorForMember(sort, name);\n\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        } else {\n            name += \".Children\";\n        }\n\n        names[idx] = name;\n\n        return names;\n    }\n\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length = sort.length; idx < length; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var r;\n\n        if (names.length > 2) {\n            r = names.pop();\n            result += crossJoin(names);\n        } else {\n            result += names.shift();\n            r = names.pop();\n        }\n\n        result += \"},{\";\n        result += r;\n        result += \"})\";\n        return result;\n    }\n\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n\n        return crossJoin(tmp);\n    }\n\n    function measureNames(measures) {\n        var idx = 0;\n        var length = measures.length;\n        var result = [];\n        var measure;\n\n        for (; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined$1 ? measure.name : measure);\n        }\n\n        return result;\n    }\n\n    function indexOf(name, items) {\n        var idx, length, index = -1;\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            if (getName(items[idx]) === name) {\n                index = idx;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function getName(name) {\n        name = name.name || name;\n\n        if (toString.call(name) === \"[object Array]\") {\n            name = name[name.length - 1];\n        }\n\n        return name;\n    }\n\n    function getRootNames(members) {\n        var length = members.length;\n        var names = [];\n        var idx = 0;\n\n        for (; idx < length; idx++) {\n            names.push(members[idx].name[0]);\n        }\n\n        return names;\n    }\n\n    function mapNames(names, rootNames) {\n        var name;\n        var rootName;\n\n        var j;\n        var idx = 0;\n        var length = names.length;\n        var rootLength = rootNames.length;\n\n        rootNames = rootNames.slice(0);\n\n        for (; idx < length; idx++) {\n            name = names[idx];\n\n            for (j = 0; j < rootLength; j++) {\n                rootName = baseHierarchyPath(rootNames[j]);\n\n                if (name.indexOf(rootName) !== -1) {\n                    rootNames[j] = name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            names: rootNames,\n            expandedIdx: j,\n            uniquePath: rootNames.slice(0, j + 1).join(\"\")\n        };\n    }\n\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var member;\n\n        var j, l;\n        var idx = 0;\n        var length = members.length;\n\n        var name;\n        var hierarchyName;\n\n        var found;\n\n        for (; idx < length; idx++) {\n            member = members[idx];\n            name = member.name;\n            found = false;\n\n            if (toString.call(name) !== \"[object Array]\") {\n                member.name = name = [name];\n            }\n\n            if (name.length > 1) {\n                child.push(member);\n            } else {\n                hierarchyName = baseHierarchyPath(name[0]);\n\n                for (j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    root.push(member);\n                }\n\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n\n        expanded = expanded.concat(child);\n\n        return {\n            root: root,\n            expanded: expanded\n        };\n    }\n\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n\n        members = members || [];\n\n        var expanded = parseDescriptors(members);\n        var root = expanded.root;\n\n        var rootNames = getRootNames(root);\n        var crossJoinCommands = [];\n\n        expanded = expanded.expanded;\n\n        var length = expanded.length;\n        var idx = 0;\n\n        var memberName;\n        var names = [];\n\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames).names;\n\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n\n            command += crossJoinCommands.join(\",\");\n        } else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]); //check if this is ok\n            }\n\n            command += rootNames.concat(names).join(\",\");\n        }\n\n        return command;\n    }\n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n    };\n\n    function serializeExpression(expression) {\n        var command = \"\";\n        var value = expression.value;\n        var field = expression.field;\n        var operator = expression.operator;\n\n        if (operator == \"in\") {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        } else {\n            command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += kendo.format(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n\n        return command;\n    }\n\n    function serializeFilters(filter, cube) {\n        var command = \"\", current;\n        var filters = filter.filters;\n        var length = filters.length;\n        var idx;\n\n        for (idx = length - 1; idx >= 0; idx--) {\n\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n\n            if (idx == length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            } else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n\n        return command;\n    }\n\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value;\n            for (var key in options) {\n                value = options[key];\n                if (capitalize) {\n                    key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                }\n                result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n            }\n            result += \"</\" + parentTagName + \">\";\n        } else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    var xmlaDiscoverCommands = {\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\",\n        schemaKPIs: \"MDSCHEMA_KPIS\"\n    };\n\n    var convertersMap = {\n        read: function(options) {\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n            command += \"SELECT NON EMPTY {\";\n\n            var columns = options.columns || [];\n            var rows = options.rows || [];\n\n            var measures = options.measures || [];\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n            var sort = options.sort || [];\n\n            if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columns = rows;\n                rows = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columns.length && !rows.length) {\n                measuresRowAxis = false;\n            }\n\n            if (columns.length) {\n                command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n            } else if (measures.length && !measuresRowAxis) {\n                command += measureNames(measures).join(\",\");\n            }\n\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n            if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                command += \", NON EMPTY {\";\n\n                if (rows.length) {\n                    command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                } else {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n            }\n\n            if (options.filter) {\n                command += \" FROM \";\n                command += \"(\";\n                command += serializeFilters(options.filter, options.connection.cube);\n                command += \")\";\n            } else {\n                command += \" FROM [\" + options.connection.cube + \"]\";\n            }\n\n            if (measures.length == 1 && columns.length) {\n                command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n            }\n\n            command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n            return command.replace(/\\&/g, \"&amp;\");\n        },\n        discover: function(options) {\n            options = options || {};\n\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n            command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n            command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n            if (options.connection && options.connection.catalog) {\n                options.properties = $.extend({}, {\n                    Catalog: options.connection.catalog\n                }, options.properties);\n            }\n\n            command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n            command += '</Discover></Body></Envelope>';\n            return command;\n        }\n    };\n\n    var XmlaTransport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var originalOptions = options;\n\n            options = this.options = extend(true, {}, this.options, options);\n\n            kendo.data.RemoteTransport.call(this, options);\n\n            if (isFunction(originalOptions.discover)) {\n                this.discover = originalOptions.discover;\n            } else if (typeof originalOptions.discover === \"string\") {\n                this.options.discover = {\n                    url: originalOptions.discover\n                };\n            } else if (!originalOptions.discover) {\n                this.options.discover = this.options.read;\n            }\n        },\n        setup: function(options, type) {\n            options.data = options.data || {};\n            $.extend(true, options.data, { connection: this.options.connection });\n\n            return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n        },\n        options: {\n            read: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            discover: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            parameterMap: function(options, type) {\n                return convertersMap[type](options,type);\n            }\n        },\n\n        discover: function(options) {\n            return $.ajax(this.setup(options, \"discover\"));\n        }\n    });\n\n    var XmlaTransportV2 = Class.extend({\n        init: function(options) {\n            options = this.options = extend(true, {}, this.options, options);\n        },\n        setup: function(options) {\n            return $.extend(true, options || {}, { connection: this.options.connection });\n        },\n        read: function(options) {\n            var that = this,\n                success,\n                error;\n\n            var fetchOptions = that.setup(options.data, READ);\n\n            success = options.success || $.noop;\n            error = options.error || $.noop;\n\n            if (options.parameterMap) {\n                fetchOptions = that.parameterMap(fetchOptions, READ);\n            }\n\n            fetchData({ url: that.options.read }, fetchOptions)\n            .then(createDataState)\n            .then(function(newDataState) {\n                success(newDataState);\n            })\n            .catch(function(err) { error(err); });\n        },\n\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        },\n\n        discover: function(options) {\n            return fetchDiscover({ url: this.options.read }, options);\n        }\n    });\n\n    function asArray(object) {\n        if (object == null) {\n            return [];\n        }\n\n        var type = toString.call(object);\n        if (type !== \"[object Array]\") {\n            return [object];\n        }\n\n        return object;\n    }\n\n    function translateAxis(axis) {\n        var result = { tuples: [] };\n        var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n        var captionGetter = kendo.getter(\"Caption['#text']\");\n        var unameGetter = kendo.getter(\"UName['#text']\");\n        var levelNameGetter = kendo.getter(\"LName['#text']\");\n        var levelNumGetter = kendo.getter(\"LNum['#text']\");\n        var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n        var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n        var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n        for (var idx = 0; idx < tuples.length; idx++) {\n            var members = [];\n            var member = asArray(tuples[idx].Member);\n            for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                members.push({\n                    children: [],\n                    caption: captionGetter(member[memberIdx]),\n                    name: unameGetter(member[memberIdx]),\n                    levelName: levelNameGetter(member[memberIdx]),\n                    levelNum: levelNumGetter(member[memberIdx]),\n                    hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                    parentName: parentNameGetter(member[memberIdx]),\n                    hierarchy: hierarchyGetter(member[memberIdx])\n                });\n            }\n\n            result.tuples.push({ members: members });\n        }\n        return result;\n    }\n\n    var schemaDataReaderMap = {\n        cubes: {\n            name: kendo.getter(\"CUBE_NAME['#text']\", true),\n            caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n        },\n        catalogs: {\n            name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true)\n        },\n        measures: {\n            name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n            caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n            defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n        },\n        kpis: {\n            name: kendo.getter(\"KPI_NAME['#text']\", true),\n            caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n            value: kendo.getter(\"KPI_VALUE['#text']\", true),\n            goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n            status: kendo.getter(\"KPI_STATUS['#text']\", true),\n            trend: kendo.getter(\"KPI_TREND['#text']\", true),\n            statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n            trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n            description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n        },\n        dimensions: {\n            name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n            caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n            type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n//unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n        },\n        hierarchies: {\n            name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n            caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n            origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n            defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n        },\n        levels: {\n            name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n            caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n            orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n            origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n        },\n        members: {\n            name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n            caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n        }\n    };\n\n    var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n    var XmlaDataReader = kendo.data.XmlDataReader.extend({\n        init: function(options) {\n            kendo.data.XmlDataReader.call(this, options);\n\n            this._extend(options);\n        },\n        _extend: function(options) {\n            var idx = 0;\n            var length = xmlaReaderMethods.length;\n            var methodName;\n            var option;\n\n            for (; idx < length; idx++) {\n                methodName = xmlaReaderMethods[idx];\n                option = options[methodName];\n\n                if (option && option !== identity) {\n                    this[methodName] = option;\n                }\n            }\n        },\n        parse: function(xml) {\n            var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n            return kendo.getter(\"['Envelope']['Body']\", true)(result);\n        },\n        errors: function(root) {\n            var fault = kendo.getter(\"['Fault']\", true)(root);\n            if (fault) {\n                return [{\n                    faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                    faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                }];\n            }\n            return null;\n        },\n        axes: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n            var axis;\n\n            var result = {\n                columns: {},\n                rows: {}\n            };\n\n            for (var idx = 0; idx < axes.length; idx++) {\n                axis = axes[idx];\n\n                if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                    if (!result.columns.tuples) {\n                        result.columns = translateAxis(axis);\n                    } else {\n                        result.rows = translateAxis(axis);\n                    }\n                }\n            }\n\n            return result;\n        },\n        data: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n            var result = [];\n            var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n            var valueGetter = kendo.getter(\"Value['#text']\");\n            var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n            for (var idx = 0; idx < cells.length; idx++) {\n                result.push({\n                    value: valueGetter(cells[idx]),\n                    fmtValue: fmtValueGetter(cells[idx]),\n                    ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                });\n            }\n\n            return result;\n        },\n        _mapSchema: function(root, getters) {\n            root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n            var rows = asArray(kendo.getter(\"row\", true)(root));\n\n            var result = [];\n\n            for (var idx = 0; idx < rows.length; idx++) {\n                var obj = {};\n                for (var key in getters) {\n                    obj[key] = getters[key](rows[idx]);\n                }\n                result.push(obj);\n            }\n\n            return result;\n        },\n        measures: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.measures);\n        },\n        kpis: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.kpis);\n        },\n        hierarchies: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n        },\n        levels: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.levels);\n        },\n        dimensions: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.dimensions);\n        },\n        cubes: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.cubes);\n        },\n        catalogs: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.catalogs);\n        },\n        members: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.members);\n        }\n    });\n\n    extend(true, kendo.data, {\n       PivotDataSource: PivotDataSource,\n       PivotDataSourceV2: PivotDataSourceV2,\n       XmlaTransport: XmlaTransport,\n       XmlaDataReader: XmlaDataReader,\n       PivotCubeBuilder: PivotCubeBuilder,\n       transports: {\n           xmla: XmlaTransport\n       },\n       readers: {\n           xmla: XmlaDataReader\n       }\n    });\n\n    var sortExpr = function(expressions, name) {\n        if (!expressions) {\n            return null;\n        }\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field === name) {\n                return expressions[idx];\n            }\n        }\n\n        return null;\n    };\n\n    var removeExpr = function(expressions, name) {\n        var result = [];\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field !== name) {\n                result.push(expressions[idx]);\n            }\n        }\n\n        return result;\n    };\n\n    kendo.ui.PivotSettingTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-pivot-setting\");\n\n            that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            if (!options.template) {\n                var actions = '';\n\n                if (that.options.enabled) {\n                    actions = `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n                }\n\n                that.options.template = (data) => ''\n                    + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${data.name || data}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-text\">${data.name || data}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                    + '</span>';\n            }\n\n            that.template = kendo.template(that.options.template);\n            that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var action = target.closest('.k-chip-action');\n                var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                 .attr(kendo.attr(\"name\"));\n\n                if (!name) {\n                    return;\n                }\n\n                if (action.hasClass(\"k-setting-delete\")) {\n                    that.remove(name);\n                    return;\n                }\n\n                if (target.closest('.k-chip-actions').length > 0) {\n                    return;\n                }\n\n                if (that.options.sortable) {\n                    var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                    that.sort({\n                        field: name,\n                        dir: sortDirection\n                    });\n                }\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filter: \".k-setting-fieldmenu\",\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        options: {\n            name: \"PivotSettingTarget\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            emptyTemplate: (data) => `<div class='k-empty'>${data}</div>`,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            if (that.options.enabled) {\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").trigger(\"blur\");\n                    },\n                    change: function(e) {\n                        var name = e.item.attr(kendo.attr(\"name\"));\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            }\n        },\n\n        _isKPI: function(data) {\n            return data.type === \"kpi\" || data.measure;\n        },\n\n        validate: function(data) {\n            var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n            if (isMeasure) {\n                return this.options.setting === \"measures\";\n            }\n\n            if (this.options.setting === \"measures\") {\n                return isMeasure;\n            }\n\n            var items = this.dataSource[this.options.setting]();\n            var name = data.defaultHierarchy || data.uniqueName;\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            return true;\n        },\n\n        add: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        move: function(name, index) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        remove: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this.dataSource._filter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this.dataSource._filter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this.dataSource._sort = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        sort: function(expr) {\n            var sortable = this.options.sortable;\n            var allowUnsort = sortable === true || sortable.allowUnsort;\n            var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n            var expressions = (this.dataSource.sort() || []);\n            var result = removeExpr(expressions, expr.field);\n\n            if (skipExpr && expressions.length !== result.length) {\n                expr = null;\n            }\n\n            if (expr) {\n                result.push(expr);\n            }\n\n            this.dataSource.sort(result);\n        },\n\n        refresh: function() {\n            var html = \"\";\n            var items = this.dataSource[this.options.setting]();\n            var length = items.length;\n            var idx = 0;\n            var item;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                }\n            } else {\n                html = this.emptyTemplate(this.options.messages.empty);\n            }\n\n            this.element.html(html);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        _sortIcon: function(name) {\n            var expressions = this.dataSource.sort();\n            var expr = sortExpr(expressions, getName(name));\n            var icon = \"\";\n\n            if (expr) {\n                icon = \"sort-\" + expr.dir;\n            }\n\n            return icon;\n        }\n    });\n\n    kendo.ui.PivotSettingTargetV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            that.template = kendo.template(that.options.template);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var parent = target.closest(\".k-chip\");\n                var name = parent.find(\".k-chip-label\").text();\n\n                if (!name) {\n                    return;\n                }\n\n                that.remove(name);\n                parent.remove();\n                that.trigger(\"remove\", { name: name });\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filterable: options.filterable,\n                    filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        events: [\"remove\"],\n\n        options: {\n            name: \"PivotSettingTargetV2\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _applyState: function() {\n            if (this._sortState !== undefined$1) {\n                this.dataSource._sort = this._sortState;\n                this._sortState = undefined$1;\n            }\n\n            if (this._stateFilter !== undefined$1) {\n                this.dataSource._filter = this._stateFilter;\n                this._stateFilter = undefined$1;\n            }\n\n            this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n        },\n\n        _cancelChanges: function() {\n            this._sortState = undefined$1;\n            this._stateFilter = undefined$1;\n            this._savedState = kendo.deepExtend([], this._initialState);\n            this._redraw();\n        },\n\n        _state: function(newState, modifyInit) {\n            var that = this;\n\n            if (!newState) {\n                return that._savedState || [];\n            } else {\n                if (!that._savedState || modifyInit) {\n                    that._initialState = kendo.deepExtend([], newState);\n                }\n                that._savedState = kendo.deepExtend([], newState);\n            }\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            this.sortable = this.element.kendoSortable({\n                connectWith: this.options.connectWith,\n                hint: that.options.hint,\n                filter: \">*:not(.k-empty)\",\n                cursor: \"move\",\n                start: function(e) {\n                    e.item.focus().blur();\n                },\n                change: function(e) {\n                    var name = e.item.find(\".k-chip-label\").text();\n\n                    if (e.action == \"receive\") {\n                        that.add(name);\n                    } else if (e.action == \"remove\") {\n                        that.remove(name);\n                    } else if (e.action == \"sort\") {\n                        that.move(name, e.newIndex);\n                    }\n                }\n            }).data(\"kendoSortable\");\n        },\n\n        add: function(name) {\n            var items = this._state();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        move: function(name, index) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        remove: function(name) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this._savedFilter = this.dataSource._filter;\n                    this._savedFilter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this._savedFilter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this._sortState = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        _emptyState: function(enable) {\n            var that = this;\n            if (enable) {\n                that.element.html(this.options.messages.empty)\n                    .addClass(\"k-settings-description\")\n                    .removeClass(\"k-chip-list\");\n            } else {\n                that.element\n                    .removeClass(\"k-settings-description\")\n                    .addClass(\"k-chip-list\");\n            }\n        },\n\n        _redraw: function() {\n            var items = this._state() || [];\n            this._emptyState(!items.length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        _targetsHTML: function(items) {\n            var item;\n            var html = \"\";\n            var idx = 0;\n            var options = this.options;\n            var enabled = false;\n\n            if (this.options.setting != \"measures\") {\n                enabled = options.filterable || options.sortable;\n            }\n\n            if (items.length) {\n                for (; idx < items.length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template({ name: item.name, menuenabled: enabled });\n                }\n            }\n            return html;\n        },\n\n        refresh: function() {\n            if (this.dataSource._preventRefresh) {\n                return;\n            }\n            var items = this.dataSource[this.options.setting]();\n            this._state(items, true);\n            this._emptyState(!this._state().length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    var PivotConfiguratorButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._element();\n            that._attachEvents();\n        },\n\n        options: {\n            name: \"PivotConfiguratorButton\",\n            text: \"Change settings\",\n            configurator: \"\"\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        toggle: function() {\n            var attr = kendo.attr(\"role\");\n            var pivotEl = this.element\n                .closest(\"[\" + attr + \"=pivotcontainer]\")\n                .find(\"[\" + attr + \"=pivotgridv2]\");\n            var pivot;\n\n            $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n            if (pivotEl.length) {\n                pivot = pivotEl.getKendoPivotGridV2();\n                pivot._setContentWidth();\n                pivot._updateDimensions();\n            }\n        },\n\n        _attachEvents: function() {\n            this.element.on(\"click\" + NS, this.toggle.bind(this));\n        },\n\n        _element: function() {\n            var options = this.options;\n            this.element.addClass(\"k-pivotgrid-configurator-button\");\n            this.element.html(kendo.format(\"<span>{0}<span class='k-icon k-i-gear'></span></span>\",options.text));\n        }\n    });\n\n    var PivotContainer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n            that.options = options;\n\n\n            that._addClasses();\n        },\n\n        options: {\n            name: \"PivotContainer\",\n            configuratorPosition: \"left\"\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _addClasses: function() {\n            var options = this.options;\n            var className;\n            this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n            switch (options.configuratorPosition) {\n                case \"right\":\n                    className = \"k-flex-row\";\n                    break;\n                case \"left\":\n                    className = \"k-flex-row-reverse\";\n                    break;\n                case \"bottom\":\n                    className = \"k-flex-column\";\n                    break;\n                case \"top\":\n                    className = \"k-flex-column-reverse\";\n                    break;\n                default:\n                    className = \"k-flex-row\";\n            }\n\n            this.element\n                .addClass(\"k-d-flex k-pos-relative\")\n                .addClass(className);\n        }\n    });\n\n    var PivotGridV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n\n            that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n            that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n            that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n            that.wrapper.append(that._columnHeadersWrapper);\n            that.wrapper.append(that._rowHeadersWrapper);\n            that.wrapper.append(that._contentWrapper);\n\n            that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\" });\n            that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\" });\n            that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE });\n\n            that._scrollable();\n            that._rowHeadersWrapper\n                .add(that._columnHeadersWrapper)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var path = button.parent().attr(kendo.attr(\"key\"));\n                    var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                    var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                    var paths = path.split(\",\");\n                    var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                    if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                        return;\n                    }\n\n                    var reducerPayLoad = {\n                        type: \"HEADERS_ACTION_TOGGLE\",\n                        payload: paths,\n                        tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                    };\n                    var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                    var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                    that.dataSource._preventRefresh = true;\n\n                    if (isRow) {\n                        that.dataSource.rows(newHeaders);\n                    } else {\n                        that.dataSource.columns(newHeaders);\n                    }\n                 });\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGridV2\",\n            autoBind: true,\n            height: null,\n            columnWidth: null,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null\n        },\n\n        destroy: function() {\n            var that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that._windowResizeHandler) {\n                $(window).off(RESIZE + NS, that._windowResizeHandler);\n                that._windowResizeHandler = null;\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _resize: function() {\n            var that = this;\n            that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that._columnHeadersWrapper;\n            var rowsHeader = that._rowHeadersWrapper;\n\n            that._resize();\n            that._windowResizeHandler = that._resize.bind(that);\n\n            that._contentWrapper.scroll(function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            $(window).on(RESIZE + NS, that._windowResizeHandler);\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this._contentWrapper.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                this._contentWrapper.scrollTop(scrollTop + (-delta));\n            }\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivotgrid\");\n\n            this.wrapper.append('<span class=\"k-pivotgrid-empty-cell\" />');\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _updateDimensions: function() {\n            var that = this;\n            that.wrapper.css({\n                \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n            });\n        },\n\n        _setContentWidth: function() {\n            if (!this.options.columnWidth) {\n                return;\n            }\n            var contentTable = this._contentWrapper.find(\"table\");\n            var columnTable = this._columnHeadersWrapper.children(\"table\");\n            var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n            contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var dataIndex;\n            var dataItem;\n\n            if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                return null;\n            }\n\n            dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n            dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n            return {\n                columnTuple: dataItem.columnTuple,\n                rowTuple: dataItem.rowTuple,\n                dataItem: dataItem.data\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n\n            var dataSource = that.dataSource;\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            that._columnBuilder.setTuples(dataSource._columnTuples);\n            that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n            that._rowBuilder.setTuples(dataSource._rowTuples);\n            that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n            that._contentBuilder.setRowColumnInfo({\n                columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                rowHeaderDepth: that._rowBuilder.getBreadth(),\n                data: dataSource._view\n            });\n\n            that._contentWrapper.html(that._contentBuilder.build());\n\n            that._setContentWidth();\n            that._updateDimensions();\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        }\n    });\n\n    ui.plugin(PivotConfiguratorButton);\n    ui.plugin(PivotContainer);\n    ui.plugin(PivotGridV2);\n\n    var PivotGrid = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var columnBuilder;\n            var rowBuilder;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n            that._createLayout();\n\n            that._columnBuilder = columnBuilder = new ColumnBuilder();\n            that._rowBuilder = rowBuilder = new RowBuilder();\n            that._contentBuilder = new ContentBuilder();\n\n            that._templates();\n\n            that.columnsHeader\n                .add(that.rowsHeader)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var builder = columnBuilder;\n                    var action = \"expandColumn\";\n                    var eventName;\n                    var path = button.attr(kendo.attr(\"path\"));\n                    var eventArgs = {\n                        axis: \"columns\",\n                        path: $.parseJSON(path)\n                    };\n\n                    if (button.parent().is(\"td\")) {\n                        builder = rowBuilder;\n                        action = \"expandRow\";\n                        eventArgs.axis = \"rows\";\n                    }\n\n                    var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                    var metadata = builder.metadata[path];\n                    var request = metadata.expanded === undefined$1;\n\n                    eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                    eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                    if (that.trigger(eventName, eventArgs)) {\n                        return;\n                    }\n\n                    builder.metadata[path].expanded = !expanded;\n                    kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                    if (!expanded && request) {\n                        that.dataSource[action](eventArgs.path);\n                    } else {\n                        that.refresh();\n                    }\n                });\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGrid\",\n            autoBind: true,\n            reorderable: true,\n            filterable: false,\n            sortable: false,\n            height: null,\n            columnWidth: 100,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                measureFields: \"Drop Data Fields Here\",\n                columnFields: \"Drop Column Fields Here\",\n                rowFields: \"Drop Rows Fields Here\"\n            }\n        },\n\n        _templates: function() {\n            var columnTemplate = this.options.columnHeaderTemplate;\n            var rowTemplate = this.options.rowHeaderTemplate;\n            var dataTemplate = this.options.dataCellTemplate;\n            var kpiStatusTemplate = this.options.kpiStatusTemplate;\n            var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n            this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n            this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n            this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n            this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n            this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n            var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n            var dataIndex;\n\n            if (!columnInfo || !rowInfo) {\n                return null;\n            }\n\n            dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n            return {\n                columnTuple: columnInfo.tuple,\n                rowTuple: rowInfo.tuple,\n                measure: columnInfo.measure || rowInfo.measure,\n                dataItem: this.dataSource.view()[dataIndex]\n            };\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measuresTarget) {\n                this.measuresTarget.setDataSource(dataSource);\n            }\n\n            if (this.rowsTarget) {\n                this.rowsTarget.setDataSource(dataSource);\n            }\n\n            if (this.columnsTarget) {\n                this.columnsTarget.setDataSource(dataSource);\n            }\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._templates();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            clearTimeout(this._headerReflowTimeout);\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(STATERESET, that._stateResetHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._stateResetHandler = that._stateReset.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(STATERESET, that._stateResetHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _stateReset: function() {\n            this._columnBuilder.reset();\n            this._rowBuilder.reset();\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivot\");\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _measureFields: function() {\n            this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n            this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                setting: \"measures\",\n                messages: {\n                    empty: this.options.messages.measureFields\n                }\n            });\n        },\n\n        _createSettingTarget: function(element, options) {\n            var template,\n                pivotOptions = this.options;\n\n            template = ({ sortIcon, name }) => ''\n                + `<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-text\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options, pivotOptions)\n                    + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`,\n                enabled: this.options.reorderable\n            }, options));\n        },\n\n        _initSettingTargets: function() {\n            this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                connectWith: this.rowFields,\n                setting: \"columns\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.columnFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                connectWith: this.columnFields,\n                setting: \"rows\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.rowFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n        },\n\n        _createLayout: function() {\n            var that = this;\n            var layoutTable = $(LAYOUT_TABLE);\n            var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n            var rightContainer = layoutTable.find(\".k-pivot-table\");\n            var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n            that._measureFields();\n            that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n            that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n            that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                    .wrap('<div class=\"k-grid-header\" />');\n\n            that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n            that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n            that.content = $('<div class=\"k-grid-content\" />');\n\n            leftContainer.append(that.measureFields);\n            leftContainer.append(that.rowFields);\n            leftContainer.append(that.rowsHeader);\n\n            gridWrapper.append(that.columnsHeader.parent());\n            gridWrapper.append(that.content);\n\n            rightContainer.append(that.columnFields);\n            rightContainer.append(gridWrapper);\n\n            that.wrapper.append(layoutTable);\n\n            that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n            that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n            that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n            that._initSettingTargets();\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _resize: function() {\n            if (this.content[0].firstChild) {\n                this._setSectionsWidth();\n                this._setSectionsHeight();\n                this._setContentWidth();\n                this._setContentHeight();\n                this._columnHeaderReflow();\n            }\n        },\n\n        _columnHeaderReflow: function() {\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            if (!kendo.support.browser.mozilla) {\n                return;\n            }\n\n            clearTimeout(this._headerReflowTimeout);\n\n            columnTable.css(\"table-layout\", \"auto\");\n\n            this._headerReflowTimeout = setTimeout(function() {\n                columnTable.css(\"table-layout\", \"\");\n            });\n        },\n\n        _setSectionsWidth: function() {\n            var rowsHeader = this.rowsHeader;\n            var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n            var width;\n\n            width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n            width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n            leftColumn.width(width);\n        },\n\n        _setSectionsHeight: function() {\n            var measureFieldsHeight = this.measureFields.height(AUTO).height();\n            var columnFieldsHeight = this.columnFields.height(AUTO).height();\n            var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n            var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n            var padding = rowFieldsHeight - this.rowFields.height();\n\n            var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n            var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n            this.measureFields.height(firstRowHeight);\n            this.columnFields.height(firstRowHeight);\n            this.rowFields.height(secondRowHeight - padding);\n            this.columnsHeader.height(secondRowHeight);\n        },\n\n        _setContentWidth: function() {\n            var contentTable = this.content.find(\"table\");\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n            this._resetColspan(columnTable);\n        },\n\n        _setContentHeight: function() {\n            var that = this;\n            var content = that.content;\n            var rowsHeader = that.rowsHeader;\n            var innerHeight = that.wrapper.innerHeight();\n            var scrollbar = kendo.support.scrollbar();\n            var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n            var height = that.options.height;\n\n            if (that.wrapper.is(\":visible\")) {\n                if (!innerHeight || !height) {\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    content.height(\"auto\");\n                    rowsHeader.height(content.height() - scrollbar);\n                    return;\n                }\n\n                innerHeight -= outerHeight(that.columnFields);\n                innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    innerHeight = scrollbar * 2 + 1;\n                    if (!skipScrollbar) {\n                        innerHeight += scrollbar;\n                    }\n                }\n\n                content.height(innerHeight);\n\n                if (skipScrollbar) {\n                    scrollbar = 0;\n                }\n\n                rowsHeader.height(innerHeight - scrollbar);\n            }\n        },\n\n        _resetColspan: function(columnTable) {\n            var that = this;\n            var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n            if (that._colspan === undefined$1) {\n                that._colspan = cell.attr(\"colspan\");\n            }\n\n            cell.attr(\"colspan\", 1);\n\n            clearTimeout(that._layoutTimeout);\n\n            that._layoutTimeout = setTimeout(function() {\n                cell.attr(\"colspan\", that._colspan);\n                that._colspan = undefined$1;\n            });\n        },\n\n        _axisMeasures: function(axis) {\n            var result = [];\n            var dataSource = this.dataSource;\n            var measures = dataSource.measures();\n            var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n            if (dataSource.measuresAxis() === axis) {\n                if (dataSource[axis]().length === 0 || hasMeasure) {\n                    result = measures;\n                }\n            }\n\n            return result;\n        },\n\n        items: function() {\n            return [];\n        },\n\n        refresh: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            var axes = dataSource.axes();\n            var columns = (axes.columns || {}).tuples || [];\n            var rows = (axes.rows || {}).tuples || [];\n\n            var columnBuilder = that._columnBuilder;\n            var rowBuilder = that._rowBuilder;\n\n            var columnAxis = {};\n            var rowAxis = {};\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n            rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n            that.columnsHeaderTree.render(columnBuilder.build(columns));\n            that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n            columnAxis = {\n                indexes: columnBuilder._indexes,\n                measures: columnBuilder.measures,\n                metadata: columnBuilder.metadata\n            };\n\n            rowAxis = {\n                indexes: rowBuilder._indexes,\n                measures: rowBuilder.measures,\n                metadata: rowBuilder.metadata\n            };\n\n            that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n            that._resize();\n\n            if (that.touchScroller) {\n                that.touchScroller.contentResized();\n            } else {\n                var touchScroller = kendo.touchScroller(that.content);\n\n                if (touchScroller && touchScroller.movable) {\n                    that.touchScroller = touchScroller;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                        that.rowsHeader.scrollTop(-e.sender.y);\n                    });\n                }\n            }\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that.columnsHeader;\n            var rowsHeader = that.rowsHeader;\n\n            that.content.on(\"scroll\", function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this.content.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                //In Firefox DOMMouseScroll event cannot be canceled\n                $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                this.rowsHeader.scrollTop(scrollTop + (-delta));\n                this.content.scrollTop(scrollTop + (-delta));\n            }\n        }\n    });\n\n    var element = kendo.dom.element;\n    var htmlNode = kendo.dom.html;\n\n    var createMetadata = function(levelNum, memberIdx) {\n       return {\n            maxChildren: 0,\n            children: 0,\n            maxMembers: 0,\n            members: 0,\n            measures: 1,\n            levelNum: levelNum,\n            parentMember: memberIdx !== 0\n        };\n    };\n\n    var buildPath = function(tuple, index) {\n        var path = [];\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            path.push(tuple.members[idx].name);\n        }\n\n        return path;\n    };\n\n    var tupleName = function(tuple, index) {\n        var name = \"\";\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            name += tuple.members[idx].name;\n        }\n\n        return name;\n    };\n\n    var ContentBuilderV2 = Class.extend({\n        init: function(options) {\n            this.template = kendo.template(options.template);\n            this.hash = [];\n        },\n\n        setRowColumnInfo: function(options) {\n            this.data = options.data;\n            this.columnHeaderLeafs = options.columnHeaderLeafs;\n            this.rowHeaderLeafs = options.rowHeaderLeafs;\n            this.columnHeaderBreadth = options.columnHeaderBreadth;\n            this.rowHeaderDepth = options.rowHeaderDepth;\n            this.hash.length = 0;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(data) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < data.length; index++) {\n                row = $(`<tr class=\"${tableStyles.tableRow} k-pivotgrid-row\"></tr>`);\n                body.append(row);\n                that.addColumCell(row, data[index], index);\n            }\n\n            this.rowsCount = data.length;\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                var cell = rowItem.cells[index];\n                if (cell) {\n                    var cellEl = $(`<td class=\"${tableStyles.tableCell} k-pivotgrid-cell\"></td>`);\n                    if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                        cellEl.addClass(\"k-pivotgrid-header-total\");\n                    }\n                    cellEl.append(that.template({\n                        dataItem: cell.data,\n                        rowTuple: cell.rowTuple,\n                        columnTuple: cell.columnTuple\n                    }));\n                    this.hash.push(cell);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n            var that = this;\n\n            var table = $(`<table class='${tableStyles.contentTable} k-pivotgrid-table'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.columnHeaderLeafs.length);\n            that.addRowElements(data);\n            this.rowsCount = data.length;\n            this.columnsCount = this.columnHeaderLeafs.length;\n\n            return that.table;\n        }\n    });\n\n    var ColumnRowBuilder = Class.extend({\n        init: function(options) {\n            this.tuples = options.tuples;\n            this.axes = options.axes;\n            this.headerTemplate = kendo.template(HEADERTEMPLATE);\n            if (options.template) {\n                this.template = kendo.template(options.template);\n            }\n        },\n\n        setTuples: function(tuples) {\n            this.tuples = tuples;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(columnHeaderRows) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < columnHeaderRows.length; index++) {\n                row = $('<tr class=\"k-table-row k-pivotgrid-row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, columnHeaderRows[index]);\n            }\n        },\n\n        addColumCell: function(rowEl, rowItem) {\n            var that = this;\n            var cellEl;\n            var cell;\n\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                cell = rowItem.cells[index];\n                if (cell) {\n                    cellEl = $(that.headerTemplate({\n                        rowspan: cell.rowSpan,\n                        colspan: cell.colSpan,\n                        key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                        iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                        expandable: cell.hasChildren && !cell.total,\n                        headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\",cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\")\n                    }));\n                    cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var tree = toTree((this.tuples || []).slice());\n            var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n            var headerRows = treeData[0];\n            var headerLeafs = treeData[1];\n            var breadth = treeData[2];\n            var rowHeaderBreadth = treeData[3];\n            var that = this;\n            that._tree = tree;\n            that._breadth = breadth;\n            that._headerLeafs = headerLeafs;\n\n            var table = $(`<table class='${tableStyles.headerTable} k-pivotgrid-table'><colgroup></colgroup><tbody class='${tableStyles.tbody} k-pivotgrid-tbody'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n            that.addRowElements(headerRows);\n\n            return that.table;\n        },\n\n        getTree: function() {\n            return this._tree;\n        },\n\n        getBreadth: function() {\n            return this._breadth;\n        },\n\n        getHeaderLeafs: function() {\n            return this._headerLeafs;\n        }\n    });\n\n    var ColumnBuilder = Class.extend({\n        init: function() {\n            this.measures = 1;\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.map = {};\n            this.rows = [];\n            this.rootTuple = root;\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n            var row;\n\n            var cellsLength;\n            var cellIdx;\n            var cells;\n            var cell;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                if (row.rowSpan === 1) {\n                    continue;\n                }\n\n                cells = row.children;\n\n                cellIdx = 0;\n                cellsLength = cells.length;\n\n                for (; cellIdx < cellsLength; cellIdx++) {\n                    cell = cells[cellIdx];\n\n                    if (cell.tupleAll) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n                }\n            }\n        },\n\n        _rowIndex: function(row) {\n            var rows = this.rows;\n            var length = rows.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                if (rows[idx] === row) {\n                    break;\n                }\n            }\n\n            return idx;\n        },\n\n        _rowLength: function() {\n            var cells = this.rows[0] ? this.rows[0].children : [];\n            var length = cells.length;\n            var rowLength = 0;\n            var idx = 0;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    rowLength += cells[idx].attr.colSpan || 1;\n                }\n            }\n\n            if (!rowLength) {\n                rowLength = this.measures;\n            }\n\n            return rowLength;\n        },\n\n        _row: function(tuple, memberIdx, parentMember) {\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var levelNum = tuple.members[memberIdx].levelNum;\n            var rowKey = rootName + levelNum;\n            var map = this.map;\n            var parentRow;\n            var children;\n\n            var row = map[rowKey];\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                row.parentMember = parentMember;\n                row.collapsed = 0;\n                row.colSpan = 0;\n                row.rowSpan = 1;\n\n                map[rowKey] = row;\n                parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                if (parentRow) {\n                    children = parentRow.children;\n\n                    if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                        row.notFirst = true;\n                    } else {\n                        row.notFirst = parentRow.notFirst;\n                    }\n                }\n\n                this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n            } else {\n                row.notFirst = false;\n\n                if (!row.parentMember || row.parentMember !== parentMember) {\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                }\n            }\n\n            return row;\n        },\n\n        _measures: function(measures, tuple, className) {\n            var map = this.map;\n            var row = map.measureRow;\n            var measure;\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                map.measureRow = row;\n                this.rows.push(row);\n            }\n\n            for (var idx = 0, length = measures.length; idx < length; idx++) {\n                measure = measures[idx];\n                row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n            }\n\n            return length;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx, parentMember) {\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var row, childRow, children, childrenLength;\n            var cell, allCell, cellAttr;\n            var cellChildren = [];\n            var path;\n\n            var idx = 0;\n            var metadata;\n\n            var colSpan;\n            var collapsed = 0;\n            var memberCollapsed = 0;\n\n            if (member.measure) {\n                this._measures(member.children, tuple);\n                return;\n            }\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n            row = this._row(tuple, memberIdx, parentMember);\n\n            children = member.children;\n            childrenLength = children.length;\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    collapsed = metadata.maxChildren;\n                    row.collapsed += collapsed;\n\n                    metadata.children = 0;\n                    childrenLength = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME })));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n            cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n            row.children.push(cell);\n            row.colSpan += 1;\n\n            if (childrenLength) {\n                allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                row.children.push(allCell);\n\n                for (; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx, member);\n                }\n\n                colSpan = childRow.colSpan;\n                collapsed = childRow.collapsed;\n\n                cell.attr.colSpan = colSpan;\n\n                metadata.children = colSpan;\n                metadata.members = 1;\n\n                row.colSpan += colSpan;\n                row.collapsed += collapsed;\n                row.rowSpan = childRow.rowSpan + 1;\n\n                if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    allCell.attr.colSpan = colSpan;\n                    colSpan -= 1;\n\n                    metadata.members += colSpan;\n                    row.colSpan += colSpan;\n                }\n            } else if (nextMember) {\n                if (nextMember.measure) {\n                    colSpan = this._measures(nextMember.children, tuple);\n                } else {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    colSpan = childRow.colSpan;\n\n                    row.collapsed += childRow.collapsed;\n                    memberCollapsed = childRow.collapsed;\n                }\n\n                metadata.members = colSpan;\n\n                if (colSpan > 1) {\n                    cell.attr.colSpan = colSpan;\n                    row.colSpan += colSpan - 1;\n                }\n            }\n\n            if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                metadata.maxMembers = metadata.members + memberCollapsed;\n            }\n\n            children = metadata.children + collapsed;\n\n            if (metadata.maxChildren < children) {\n                metadata.maxChildren = children;\n            }\n\n            (allCell || cell).tupleAll = true;\n\n            return row;\n        }\n    });\n\n    var RowBuilder = Class.extend({\n        init: function() {\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _rowLength: function() {\n            var children = this.rows[0].children;\n            var length = 0;\n            var idx = 0;\n\n            var cell = children[idx];\n\n            while (cell) {\n                length += (cell.attr.colSpan || 1);\n                cell = children[++idx];\n            }\n\n            return length;\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.rootTuple = root;\n            this.rows = [];\n            this.map = {};\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n\n            var members = this.rootTuple.members;\n            var firstMemberName = members[0].name;\n            var membersLength = members.length;\n            var memberIdx = 0;\n\n            var row;\n            var cell;\n            var maxcolSpan;\n            var map = this.map;\n            var allRow;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                    maxcolSpan = this[members[memberIdx].name];\n                    cell = row.colSpan[\"dim\" + memberIdx];\n\n                    if (cell && cell.colSpan < maxcolSpan) {\n                        cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                    }\n                }\n            }\n\n            row = map[firstMemberName];\n            allRow = map[firstMemberName + \"all\"];\n\n            if (row) {\n                row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n            }\n\n            if (allRow) {\n                allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n            }\n        },\n\n        _row: function(children) {\n            var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n            row.rowSpan = 1;\n            row.colSpan = {};\n\n            this.rows.push(row);\n\n            return row;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx) {\n            var map = this.map;\n            var path;\n\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var children = member.children;\n            var childrenLength = children.length;\n\n            var levelNum = Number(member.levelNum);\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n            var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n            var row = map[parentName + \"all\"] || map[parentName];\n            var colSpan = levelNum + 1;\n\n            var cell, allCell;\n            var childRow, allRow;\n            var metadata;\n            var className;\n            var cellChildren = [];\n            var expandIconAttr;\n            var idx;\n\n            if (!row || row.hasChild) {\n                row = this._row();\n            } else {\n                row.hasChild = true;\n            }\n\n            if (member.measure) {\n                className = row.allCell ? \"k-grid-footer\" : \"\";\n                row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                row.rowSpan = childrenLength;\n\n                for (idx = 1; idx < childrenLength; idx++) {\n                    this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                }\n\n                return row;\n            }\n\n            map[tuplePath + member.name] = row;\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                metadata.rootLevelNum = rootLevelNum;\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    childrenLength = 0;\n                    metadata.children = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME })));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n\n            className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n            cell = this._cell(className, cellChildren, member);\n            cell.colSpan = colSpan;\n\n            row.children.push(cell);\n            row.colSpan[\"dim\" + memberIdx] = cell;\n\n            if (!this[rootName] || this[rootName] < colSpan) {\n                this[rootName] = colSpan;\n            }\n\n            if (childrenLength) {\n                row.allCell = false;\n                row.hasChild = false;\n\n                for (idx = 0; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx);\n\n                    if (row !== childRow) {\n                        row.rowSpan += childRow.rowSpan;\n                    }\n                }\n\n                if (row.rowSpan > 1) {\n                    cell.attr.rowSpan = row.rowSpan;\n                }\n\n                metadata.children = row.rowSpan;\n\n                allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                allCell.colSpan = colSpan;\n\n                allRow = this._row([ allCell ]);\n                allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                allRow.allCell = true;\n\n                map[tuplePath + member.name + \"all\"] = allRow;\n\n                if (nextMember) {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    allCell.attr.rowSpan = childRow.rowSpan;\n                }\n\n                row.rowSpan += allRow.rowSpan;\n\n                metadata.members = allRow.rowSpan;\n\n            } else if (nextMember) {\n                row.hasChild = false;\n                this._buildRows(tuple, memberIdx + 1);\n\n                (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                metadata.members = row.rowSpan;\n            }\n\n            if (metadata.maxChildren < metadata.children) {\n                metadata.maxChildren = metadata.children;\n            }\n\n            if (metadata.maxMembers < metadata.members) {\n                metadata.maxMembers = metadata.members;\n            }\n\n            return row;\n        }\n    });\n\n    var ContentBuilder = Class.extend({\n        init: function() {\n            this.columnAxis = {};\n            this.rowAxis = {};\n        },\n\n        build: function(data, columnAxis, rowAxis) {\n            var index = columnAxis.indexes[0];\n            var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n            this.columnAxis = columnAxis;\n            this.rowAxis = rowAxis;\n\n            this.data = data;\n\n            this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n            if (!this.rowLength) {\n                this.rowLength = 1;\n            }\n\n            var tbody = this._tbody();\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n            ];\n        },\n\n        _colGroup: function() {\n            var length = this.columnAxis.measures.length || 1;\n            var children = [];\n            var idx = 0;\n\n            if (this.rows[0]) {\n                length = this.rows[0].children.length;\n            }\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function() {\n            this.rows = [];\n\n            if (this.data[0]) {\n                this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                this._buildRows();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _indexes: function(axisInfo, total) {\n            var result = [];\n            var axisInfoMember;\n            var indexes = axisInfo.indexes;\n            var metadata = axisInfo.metadata;\n            var measures = axisInfo.measures;\n            var measuresLength = measures.length || 1;\n\n            var current;\n            var dataIdx = 0;\n            var firstEmpty = 0;\n\n            var idx = 0;\n            var length = indexes.length;\n            var measureIdx;\n            var index;\n\n            var children;\n            var skipChildren;\n\n            if (!length) {\n                for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                    result[measureIdx] = {\n                        index: measureIdx,\n                        measure: measures[measureIdx],\n                        tuple: null\n                    };\n                }\n\n                return result;\n            }\n\n            for (; idx < length; idx++) {\n                axisInfoMember = indexes[idx];\n                current = metadata[axisInfoMember.path];\n                children = current.children + current.members;\n                skipChildren = 0;\n\n                if (children) {\n                    children -= measuresLength;\n                }\n\n                if (current.expanded === false && current.children !== current.maxChildren) {\n                    skipChildren = current.maxChildren;\n                }\n\n                if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                    children = -1;\n                }\n\n                if (children > -1) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        index = children + measureIdx;\n                        if (!current.children) {\n                            index += firstEmpty;\n                        }\n\n                        result[children + firstEmpty + measureIdx] = {\n                            children: children,\n                            index: dataIdx,\n                            measure: measures[measureIdx],\n                            tuple: axisInfoMember.tuple\n                        };\n                        dataIdx += 1;\n                    }\n\n                    while (result[firstEmpty] !== undefined$1) {\n                        firstEmpty += 1;\n                    }\n                }\n\n                if (firstEmpty === total) {\n                    break;\n                }\n\n                dataIdx += skipChildren;\n            }\n\n            return result;\n        },\n\n        _buildRows: function() {\n            var rowIndexes = this.rowIndexes;\n            var length = rowIndexes.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                var rowIndex = rowIndexes[idx];\n                if (rowIndex) {\n                    this.rows.push(this._buildRow(rowIndex));\n                }\n            }\n        },\n\n        _buildRow: function(rowInfo) {\n            var startIdx = rowInfo.index * this.rowLength;\n            var columnIndexes = this.columnIndexes;\n            var length = columnIndexes.length;\n            var columnInfo;\n            var cells = [];\n            var idx = 0;\n\n            var templateInfo;\n            var cell, cellContent;\n            var attr, dataItem, measure;\n\n            for (; idx < length; idx++) {\n                columnInfo = columnIndexes[idx];\n\n                if (columnInfo === undefined$1) {\n                    continue;\n                }\n\n                attr = { className: tableStyles.tableCell };\n                if (columnInfo.children) {\n                    attr.className += \" k-alt\";\n                }\n\n                cellContent = \"\";\n                dataItem = this.data[startIdx + columnInfo.index];\n                measure = columnInfo.measure || rowInfo.measure;\n\n                templateInfo = {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: measure,\n                    dataItem: dataItem\n                };\n\n                if (dataItem.value !== \"\" && measure && measure.type) {\n                    if (measure.type === \"status\") {\n                        cellContent = this.kpiStatusTemplate(templateInfo);\n                    } else if (measure.type === \"trend\") {\n                        cellContent = this.kpiTrendTemplate(templateInfo);\n                    }\n                }\n\n                if (!cellContent) {\n                    cellContent = this.dataTemplate(templateInfo);\n                }\n\n                cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                cell.value = dataItem.value;\n                cells.push(cell);\n            }\n\n            attr = { className: tableStyles.tableRow };\n            if (rowInfo.children) {\n                attr.className += \" k-grid-footer\";\n            }\n\n            return element(\"tr\", attr, cells);\n        }\n    });\n\n    ui.plugin(PivotGrid);\n\n    kendo.PivotExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n\n            this.widget = options.widget;\n            this.dataSource = this.widget.dataSource;\n        },\n\n        _columns: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var width = this.widget.options.columnWidth;\n            var result = [];\n            var idx;\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cells: function(rows, type, callback) {\n            var result = [];\n\n            var i = 0;\n            var length = rows.length;\n\n            var cellsLength;\n            var row, cells;\n            var j, cell;\n\n            for (; i < length; i++) {\n                row = [];\n                cells = rows[i].children;\n                cellsLength = cells.length;\n\n                for (j = 0; j < cellsLength; j++) {\n                    cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.value,\n                        colSpan: cell.attr.colSpan || 1,\n                        rowSpan: cell.attr.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rows: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n            var rowHeaderRows = rowHeaderTable.children[1].children;\n            var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n            var columnRows = this._cells(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: columnHeaderRows.length\n                });\n            }\n\n            var dataCallback = function(row, index) {\n                var j = 0;\n                var cell, value;\n                var cells = contentRows[index].children;\n\n                for (; j < columnHeaderLength; j++) {\n                    cell = cells[j];\n                    value = Number(cell.value);\n\n                    if (isNaN(value)) {\n                        value = cell.value;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n        _freezePane: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows.length\n            };\n        },\n\n        workbook: function() {\n            var promise,\n                resolveFn = function() {\n                    return {\n                        sheets: [ {\n                            columns: this._columns(),\n                            rows: this._rows(),\n                            freezePane: this._freezePane(),\n                            filter: null\n                        } ]\n                    };\n                };\n\n            if (this.dataSource.view()[0]) {\n                promise = $.Deferred();\n                promise.resolve();\n            } else {\n                promise = this.dataSource.fetch();\n            }\n\n            return promise.then(resolveFn.bind(this));\n        }\n    });\n\n    var PivotExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            filterable: false,\n            fileName: \"Export.xlsx\"\n        },\n        saveAsExcel: function() {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.PivotExcelExporter({\n                widget: this\n            });\n\n            var resolveFn = function(book) {\n                if (!this.trigger(\"excelExport\", { workbook: book })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n                    });\n                }\n            };\n\n            exporter.workbook().then(resolveFn.bind(this));\n        }\n    };\n\n    kendo.PivotExcelMixin = PivotExcelMixin;\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGrid.prototype);\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGrid.prototype);\n\n        PivotGrid.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n        PivotGridV2.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n})(window.kendo.jQuery);\n"]}